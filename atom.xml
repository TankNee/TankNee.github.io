<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>归舟棹远</title>
  
  <subtitle>云端筑梦</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.tanknee.cn/"/>
  <updated>2020-06-02T00:44:25.665Z</updated>
  <id>https://www.tanknee.cn/</id>
  
  <author>
    <name>TankNee</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>五月May</title>
    <link href="https://www.tanknee.cn/2020/06/01/569/"/>
    <id>https://www.tanknee.cn/2020/06/01/569/</id>
    <published>2020-06-01T06:51:00.000Z</published>
    <updated>2020-06-02T00:44:25.665Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>    <div id="aplayer-QqmfKOwV" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="28402351" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><p>提笔落字时总觉自己文疏才浅，阅历浅薄，无从着笔。</p><p>五月共三十一天，步数超过3000的日子大概不足十天，倒是出去吃饭吃了很多次。</p><p>一号结束了为期两个月的打工生涯，小半年也算是搞到了第一笔大额资金。</p><p>八号往鹅厂投了简历，挣扎了两三天，终是没过，虽然也没给原因，大概就是因为我太菜了吧，一问三不知。</p><blockquote><p>2020年5月8日</p><p>电话面试，深圳总部面试</p><ol><li>dom事件的冒泡与捕获</li><li>CSS中的样式优先级是怎样分布的</li><li>React-Native的底层实现，是如何与原生系统进行交互的</li><li>算法题：找出一个字符串的最长重复子序列</li></ol><p>2020年5月15日</p><p>电话面试，武汉腾讯</p><ol><li>JavaScript原型链的实现（不了解）</li><li>http协议中数据传输的编码方式，发送json格式的数据时的content-type</li><li>说一下auth2.0</li><li>说一下当下前端框架对Dom做了哪些优化</li><li>用户登录的实现<ol><li>使用了什么加密方式–jwt</li><li>jwt有什么缺点</li><li>session和cookie</li></ol></li><li>讲一下MySQL的索引实现（不了解）</li></ol></blockquote><p>明年再努力吧。</p><p><img src="https://img.tanknee.cn/blogpicbed/2020/06/20200601c27bb1c554117.jpg" alt="c7b90c865a856dc54deab5445817f0c"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Code" scheme="https://www.tanknee.cn/categories/Code/"/>
    
    
      <category term="字符" scheme="https://www.tanknee.cn/tags/%E5%AD%97%E7%AC%A6/"/>
    
      <category term="算法" scheme="https://www.tanknee.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数据" scheme="https://www.tanknee.cn/tags/%E6%95%B0%E6%8D%AE/"/>
    
      <category term="dom" scheme="https://www.tanknee.cn/tags/dom/"/>
    
      <category term="面试" scheme="https://www.tanknee.cn/tags/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="文疏" scheme="https://www.tanknee.cn/tags/%E6%96%87%E7%96%8F/"/>
    
      <category term="实现" scheme="https://www.tanknee.cn/tags/%E5%AE%9E%E7%8E%B0/"/>
    
      <category term="着笔" scheme="https://www.tanknee.cn/tags/%E7%9D%80%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>四月April</title>
    <link href="https://www.tanknee.cn/2020/05/02/568/"/>
    <id>https://www.tanknee.cn/2020/05/02/568/</id>
    <published>2020-05-02T09:25:00.000Z</published>
    <updated>2020-06-01T15:38:54.779Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>    <div id="aplayer-vhGknLPe" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="450567505" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><h3 id="Gitea-Contribution"><a href="#Gitea-Contribution" class="headerlink" title="Gitea Contribution"></a>Gitea Contribution</h3><p><img src="https://img.tanknee.cn/blogpicbed/2020/05/2020050214eb2f8ad8224.png" alt="Gitea Contribution"></p><h3 id="Github-Contribution"><a href="#Github-Contribution" class="headerlink" title="Github Contribution"></a>Github Contribution</h3><p><img src="https://img.tanknee.cn/blogpicbed/2020/05/202005021736d66679c34.png" alt="Github Contribution"></p><p>断断续续写了一快一整年的月报了，还是没有确定究竟要留下一个什么样的形式。偶尔会有段时间很在意某种格式，但也经常过了一会儿就不太在意了。</p><p>前两天在公众号里发了一张图片：</p><p><img src="https://img.tanknee.cn/blogpicbed/2020/05/202005021550268653b2f.jpg" alt=""></p><p>暴力终究也会递归式地催生新的暴力反抗。</p><p>好几次在社交平台看到触动以致激怒我的言论，反驳的字已经全部打进了输入框，最后却哐哐哐全都删掉。</p><p>诚然，有那么一瞬间，想把作者的脑袋拧下来，问候他到底有没有读过书，整天逼逼赖赖发这些脑瘫言论？</p><p>但是当我全部删掉之后，突然就有那么一瞬间平静下来。</p><p>暴力是如此的易于传播，以致于每一次都会上当。</p><p>发完这张图片之后，又在原博评论里看到新的东西：</p><p><img src="https://img.tanknee.cn/blogpicbed/2020/05/202005021cae5c08d3bf2.png" alt="评论"></p><blockquote><p>达克效应（D-K effect）</p><p>全称为邓宁-克鲁格效应（Dunning-Kruger effect）。它是一种认知偏差现象，指的是能力欠缺的人在自己欠考虑的决定的基础上得出错误结论，但是无法正确认识到自身的不足，辨别错误行为。这些能力欠缺者们沉浸在自我营造的虚幻的优势之中，常常高估自己的能力水平，却无法客观评价他人的能力。</p></blockquote><p>上了大学之后，看到的无知的事情越来越多，起初是愤懑，想着义正言辞地反驳，幻想我这一段狗屁不通的言论能起到一点点我设想的效果，后来也就慢慢冷静。</p><p><strong>没有人想听你的教诲和理由，你是什么，他又是什么？</strong></p><p>碰了几鼻子的灰之后再也没有跟人抬杠的心情，挺好的。</p><p>Keep hungry and keep stupid!</p><hr><p>也祝五月返校的各位开学愉快，暑假相会</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Caprice" scheme="https://www.tanknee.cn/categories/Caprice/"/>
    
    
      <category term="meting" scheme="https://www.tanknee.cn/tags/meting/"/>
    
      <category term="netease" scheme="https://www.tanknee.cn/tags/netease/"/>
    
      <category term="type" scheme="https://www.tanknee.cn/tags/type/"/>
    
      <category term="server" scheme="https://www.tanknee.cn/tags/server/"/>
    
      <category term="图片" scheme="https://www.tanknee.cn/tags/%E5%9B%BE%E7%89%87/"/>
    
      <category term="effect" scheme="https://www.tanknee.cn/tags/effect/"/>
    
      <category term="暴力" scheme="https://www.tanknee.cn/tags/%E6%9A%B4%E5%8A%9B/"/>
    
      <category term="言论" scheme="https://www.tanknee.cn/tags/%E8%A8%80%E8%AE%BA/"/>
    
      <category term="keep" scheme="https://www.tanknee.cn/tags/keep/"/>
    
  </entry>
  
  <entry>
    <title>昼夜双版Typecho主题SplityRemake-新世界的灰烬</title>
    <link href="https://www.tanknee.cn/2020/04/15/splity-remake/"/>
    <id>https://www.tanknee.cn/2020/04/15/splity-remake/</id>
    <published>2020-04-15T09:36:00.000Z</published>
    <updated>2020-06-02T02:00:24.697Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>但愿旧世界的火光能够燃尽晦暗</p></blockquote><p>在前端的路上走走停停，玩了快大半年，发现自己确实还没有能力承载一个完成的项目，每次都是做了一半就已经十分的疲倦。</p><h2 id="Tribute-and-Disclaimer"><a href="#Tribute-and-Disclaimer" class="headerlink" title="Tribute and Disclaimer"></a>Tribute and Disclaimer</h2><p>本来是想拿着原始的<code>Default</code>主题直接修改，但发现实在是太简陋了…就没有用那个，前两天在<a href="https://www.dpaoz.com/" target="_blank" rel="noopener">一个网站</a>上看到了这个主题的原版(Splity)。</p><blockquote><p>其实这个的原版也是仿照着一个付费的wordpress主题写的，我咨询了Splity的原作者，他许可了我的二次修改与发布，如果上述有任何一方认为我的行为有侵权嫌疑，那么请联系我删除该主题的所有信息。</p></blockquote><p><strong>再次感谢每一位作者的付出与灵感，我不希望我的改动会损害到您的利益，如果实有冒犯，请联系我删除，谢谢</strong></p><p><img src="https://tanknee.cn/usr/uploads/2020/04/1519127870.png" alt="202004157bce857b07891.png"></p><h2 id="Here-is-the-change-log"><a href="#Here-is-the-change-log" class="headerlink" title="Here is the change log"></a>Here is the change log</h2><ul><li><p>修复黑暗模式的bug</p></li><li><p>增加文章目录的输出</p></li><li><p>调整文章缩略图的输出</p></li><li><p>去除主页的走马灯效果</p></li><li><p>去除个人信息栏的简介– </p><ul><li><del>后续准备添加一言api</del>(已完成)</li></ul></li><li><p>调整最新文章的数量</p></li><li><p>文章页自动隐藏 最新文章和最热文章两个项目</p></li><li><p>内置添加图片灯箱效果</p></li><li><p>调整markdown文章格式</p></li><li><p>调整header的栏目输出</p></li><li><p>页首添加了动画</p></li><li><p>修改了文章中a标签的样式</p></li><li><p>修改了图片的显示</p></li><li><p>mobile端文章目录的支持</p></li><li><p>修复了图片分享的bug</p></li><li><p>添加了<code>pretag</code>和<code>prebadge</code>的字段支持</p></li></ul><blockquote><p>徽标和标签支持</p></blockquote><blockquote><img src="https://img.tanknee.cn/blogpicbed/2020/04/2020041177f60cc42daeb.png"/></blockquote><blockquote><p>详情请前往文章编辑页查看！</p></blockquote><ul><li>修复了tag输出的问题</li><li>添加颜文字的支持</li><li>添加了对LaTeX公式的支持</li><li>修复OwO颜文字的显示</li><li>修改评论区的字体</li><li>修复button样式</li><li>修复生成分享海报时的问题<ul><li>修复海报图片跨域问题</li><li>修复海报摘要显示问题</li></ul></li><li>添加index界面文章发表时间的显示</li><li>添加了评论区UA的显示</li><li>加回了走马灯效果，并修改了图片显示逻辑</li><li>修复登录按钮显示异常</li></ul><h2 id="Download-and-use"><a href="#Download-and-use" class="headerlink" title="Download and use"></a>Download and use</h2><ol><li>首先你应该前往<a href="https://github.com/TankNee/SplityRemake" target="_blank" rel="noopener">GitHub</a>或者<a href="https://git.tanknee.cn/tanknee/Splity-Remake/src/branch/master" target="_blank" rel="noopener">Gitea</a>的主页下载<code>SplityRemake</code>的压缩包</li></ol><blockquote><p><code>master</code>分支的版本是较为稳定的版本，一般情况下请下载该版本的主题</p><p><code>develop</code>分支是正在开发中的版本，一般来说每一天会合并一次<code>develop</code>和<code>master</code></p></blockquote><ol start="2"><li>将下载的压缩包上传到typecho的theme文件夹下</li><li>解压压缩包，并重命名为<code>splity</code>，<strong>这一点十分重要，请务必改对名称，否则会出现不可预知的错误</strong></li><li>打开后台的主题页面配置主题</li></ol><h2 id="Issue"><a href="#Issue" class="headerlink" title="Issue"></a>Issue</h2><p>已知的错误是海报生成时有大概率失败，这与您的图片托管服务商有关，请配置跨域信息</p><h2 id="To-Do"><a href="#To-Do" class="headerlink" title="To Do"></a>To Do</h2><ul><li><input checked="" disabled="" type="checkbox"> 完成归档页面的编写</li><li><input checked="" disabled="" type="checkbox"> 实现留言板界面的优化</li><li><input checked="" disabled="" type="checkbox"> 实现评论区表情的输入</li><li><input checked="" disabled="" type="checkbox"> 实现友链的优化</li><li><input checked="" disabled="" type="checkbox"> 实现OwO的夜间模式的优化</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Code" scheme="https://www.tanknee.cn/categories/Code/"/>
    
    
      <category term="网站" scheme="https://www.tanknee.cn/tags/%E7%BD%91%E7%AB%99/"/>
    
      <category term="文件" scheme="https://www.tanknee.cn/tags/%E6%96%87%E4%BB%B6/"/>
    
      <category term="按钮" scheme="https://www.tanknee.cn/tags/%E6%8C%89%E9%92%AE/"/>
    
      <category term="button" scheme="https://www.tanknee.cn/tags/button/"/>
    
      <category term="markdown" scheme="https://www.tanknee.cn/tags/markdown/"/>
    
      <category term="wordpress" scheme="https://www.tanknee.cn/tags/wordpress/"/>
    
      <category term="图片" scheme="https://www.tanknee.cn/tags/%E5%9B%BE%E7%89%87/"/>
    
      <category term="typecho" scheme="https://www.tanknee.cn/tags/typecho/"/>
    
      <category term="页面" scheme="https://www.tanknee.cn/tags/%E9%A1%B5%E9%9D%A2/"/>
    
      <category term="修复" scheme="https://www.tanknee.cn/tags/%E4%BF%AE%E5%A4%8D/"/>
    
      <category term="文章" scheme="https://www.tanknee.cn/tags/%E6%96%87%E7%AB%A0/"/>
    
      <category term="添加" scheme="https://www.tanknee.cn/tags/%E6%B7%BB%E5%8A%A0/"/>
    
      <category term="评论区" scheme="https://www.tanknee.cn/tags/%E8%AF%84%E8%AE%BA%E5%8C%BA/"/>
    
      <category term="splity" scheme="https://www.tanknee.cn/tags/splity/"/>
    
  </entry>
  
  <entry>
    <title>算法分析入门系列(三) 动态规划算法</title>
    <link href="https://www.tanknee.cn/2020/04/15/alogrithmanalysis_3/"/>
    <id>https://www.tanknee.cn/2020/04/15/alogrithmanalysis_3/</id>
    <published>2020-04-15T09:00:00.000Z</published>
    <updated>2020-06-01T14:59:44.617Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="作业排程问题"><a href="#作业排程问题" class="headerlink" title="作业排程问题"></a>作业排程问题</h2><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><blockquote><p>Automobile factory with two assembly lines(汽车厂两条装配线)</p><p>– Each line has n stations: S1,1, . . . , S1,n and S2,1, . . . , S2,n(每条装</p><p>配线有n个工序站台)</p><p>– Corresponding stations S1, j and S2, j perform the same function </p><p>but can take different amounts of time a1, j and a2, j (每条装配线的</p><p>第j个站台的功能相同,但是效率不一致)</p><p>– Entry times e1 and e2 and exit times x1 and x2(上线和下线时间)</p></blockquote><p>描述并实现动态规划的作业排程算法，并显示下图的排程结果。</p><img src="https://img.tanknee.cn/blogpicbed/2020/03/2020033165dde9b215a42.png"/><h3 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * OperationSequencing</span></span><br><span class="line"><span class="comment"> * 作业排程算法实现</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * int arrayA[2][5] = &#123; 7,9,3,4,8,8,5,6,4,5 &#125;; int arrayT[2][4] = &#123;</span></span><br><span class="line"><span class="comment"> * 2,3,1,3,2,1,2,2 &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OperationSequencing</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;Route&gt; routes = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addToRoutes</span><span class="params">(Node node, Integer costTime)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (Route route : routes) &#123;</span><br><span class="line">            <span class="keyword">if</span> (route.getWorkIndex() == node.getWorkIndex() &amp;&amp; costTime &lt; route.getCostTime()) &#123;</span><br><span class="line">                route.setLineIndex(node.getLineIndex());</span><br><span class="line">                route.setCostTime(costTime);</span><br><span class="line">                flag = <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (route.getWorkIndex() == node.getWorkIndex()) &#123;</span><br><span class="line">                flag = <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!flag) &#123;</span><br><span class="line">            routes.add(<span class="keyword">new</span> Route(node.getLineIndex(), node.getWorkIndex(), costTime));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printRoutes</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Collections.sort(routes, <span class="keyword">new</span> Comparator&lt;Route&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(Route r1, Route r2)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> r1.getWorkIndex() - r2.getWorkIndex();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        System.out.print(<span class="string">"enter--&gt;"</span>);</span><br><span class="line">        <span class="keyword">for</span> (Route route : routes) &#123;</span><br><span class="line">            System.out.print(<span class="string">"("</span> + route.getLineIndex() + <span class="string">","</span> + route.getWorkIndex() + <span class="string">")--&gt;"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.print(<span class="string">"exit"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getShortestTime</span><span class="params">(WorkingGraph workingGraph, Node endNode)</span> </span>&#123;</span><br><span class="line">        WorkingGraph _workingGraph = <span class="keyword">new</span> WorkingGraph(workingGraph);</span><br><span class="line">        <span class="keyword">if</span> (endNode.getParents().size() == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Edge.getEdgeWeight(_workingGraph.getEnterNode(), endNode, _workingGraph.getEdges())</span><br><span class="line">                    + endNode.getWorkTime();</span><br><span class="line">        &#125;</span><br><span class="line">        Integer leftParentTime = Edge.getEdgeWeight(endNode.getParents().get(<span class="number">0</span>), endNode, _workingGraph.getEdges());</span><br><span class="line">        Integer rightParentTime = Edge.getEdgeWeight(endNode.getParents().get(<span class="number">1</span>), endNode, _workingGraph.getEdges());</span><br><span class="line">        <span class="comment">// 去掉与末尾节点相关的边</span></span><br><span class="line">        Edge.removeEdgeWithNode(endNode, _workingGraph.getEdges());</span><br><span class="line">        _workingGraph.getNodes().remove(endNode);</span><br><span class="line"></span><br><span class="line">        Integer leftTime = getShortestTime(_workingGraph, endNode.getParents().get(<span class="number">0</span>)) + leftParentTime;</span><br><span class="line">        Integer rightTime = getShortestTime(_workingGraph, endNode.getParents().get(<span class="number">1</span>)) + rightParentTime;</span><br><span class="line">        addToRoutes(endNode.getParents().get(leftTime &gt; rightTime ? <span class="number">1</span> : <span class="number">0</span>),</span><br><span class="line">                leftTime &gt; rightTime ? rightTime : leftTime);</span><br><span class="line">        <span class="keyword">return</span> Math.min(leftTime, rightTime) + endNode.getWorkTime();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        WorkingGraph workingGraph = <span class="keyword">new</span> WorkingGraph();</span><br><span class="line">        <span class="comment">// -1-1代表起始节点，-2-2代表离开节点</span></span><br><span class="line">        Node enter = <span class="keyword">new</span> Node(-<span class="number">1</span>, -<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">        Node exit = <span class="keyword">new</span> Node(-<span class="number">2</span>, -<span class="number">2</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        Node a11 = <span class="keyword">new</span> Node(<span class="number">1</span>, <span class="number">1</span>, <span class="number">7</span>);</span><br><span class="line">        Node a12 = <span class="keyword">new</span> Node(<span class="number">1</span>, <span class="number">2</span>, <span class="number">9</span>);</span><br><span class="line">        Node a13 = <span class="keyword">new</span> Node(<span class="number">1</span>, <span class="number">3</span>, <span class="number">3</span>);</span><br><span class="line">        Node a14 = <span class="keyword">new</span> Node(<span class="number">1</span>, <span class="number">4</span>, <span class="number">4</span>);</span><br><span class="line">        Node a15 = <span class="keyword">new</span> Node(<span class="number">1</span>, <span class="number">5</span>, <span class="number">8</span>);</span><br><span class="line"></span><br><span class="line">        Node a21 = <span class="keyword">new</span> Node(<span class="number">2</span>, <span class="number">1</span>, <span class="number">8</span>);</span><br><span class="line">        Node a22 = <span class="keyword">new</span> Node(<span class="number">2</span>, <span class="number">2</span>, <span class="number">5</span>);</span><br><span class="line">        Node a23 = <span class="keyword">new</span> Node(<span class="number">2</span>, <span class="number">3</span>, <span class="number">6</span>);</span><br><span class="line">        Node a24 = <span class="keyword">new</span> Node(<span class="number">2</span>, <span class="number">4</span>, <span class="number">4</span>);</span><br><span class="line">        Node a25 = <span class="keyword">new</span> Node(<span class="number">2</span>, <span class="number">5</span>, <span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">        enter.addToChildren(a11);</span><br><span class="line">        enter.addToChildren(a21);</span><br><span class="line"></span><br><span class="line">        a11.addToParents(enter);</span><br><span class="line">        a11.addToChildren(a12);</span><br><span class="line">        a11.addToChildren(a22);</span><br><span class="line"></span><br><span class="line">        a21.addToParents(enter);</span><br><span class="line">        a21.addToChildren(a12);</span><br><span class="line">        a21.addToChildren(a22);</span><br><span class="line"></span><br><span class="line">        a12.addToParents(a11);</span><br><span class="line">        a12.addToParents(a21);</span><br><span class="line">        a12.addToChildren(a13);</span><br><span class="line">        a12.addToChildren(a23);</span><br><span class="line"></span><br><span class="line">        a22.addToParents(a11);</span><br><span class="line">        a22.addToParents(a21);</span><br><span class="line">        a22.addToChildren(a13);</span><br><span class="line">        a22.addToChildren(a23);</span><br><span class="line"></span><br><span class="line">        a13.addToParents(a12);</span><br><span class="line">        a13.addToParents(a22);</span><br><span class="line">        a13.addToChildren(a14);</span><br><span class="line">        a13.addToChildren(a24);</span><br><span class="line"></span><br><span class="line">        a23.addToParents(a12);</span><br><span class="line">        a23.addToParents(a22);</span><br><span class="line">        a23.addToChildren(a14);</span><br><span class="line">        a23.addToChildren(a24);</span><br><span class="line"></span><br><span class="line">        a14.addToParents(a13);</span><br><span class="line">        a14.addToParents(a23);</span><br><span class="line">        a14.addToChildren(a15);</span><br><span class="line">        a14.addToChildren(a25);</span><br><span class="line"></span><br><span class="line">        a24.addToParents(a13);</span><br><span class="line">        a24.addToParents(a23);</span><br><span class="line">        a24.addToChildren(a15);</span><br><span class="line">        a24.addToChildren(a25);</span><br><span class="line"></span><br><span class="line">        a15.addToParents(a14);</span><br><span class="line">        a15.addToParents(a24);</span><br><span class="line">        a15.addToChildren(exit);</span><br><span class="line"></span><br><span class="line">        a25.addToParents(a14);</span><br><span class="line">        a25.addToParents(a24);</span><br><span class="line">        a25.addToChildren(exit);</span><br><span class="line"></span><br><span class="line">        exit.addToParents(a15);</span><br><span class="line">        exit.addToParents(a25);</span><br><span class="line"></span><br><span class="line">        List&lt;Node&gt; nodes = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        nodes.add(enter);</span><br><span class="line"></span><br><span class="line">        nodes.add(a11);</span><br><span class="line">        nodes.add(a12);</span><br><span class="line">        nodes.add(a13);</span><br><span class="line">        nodes.add(a14);</span><br><span class="line">        nodes.add(a15);</span><br><span class="line"></span><br><span class="line">        nodes.add(a21);</span><br><span class="line">        nodes.add(a22);</span><br><span class="line">        nodes.add(a23);</span><br><span class="line">        nodes.add(a24);</span><br><span class="line">        nodes.add(a25);</span><br><span class="line"></span><br><span class="line">        nodes.add(exit);</span><br><span class="line">        List&lt;Edge&gt; edges = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        edges.add(<span class="keyword">new</span> Edge(enter, a11, <span class="number">2</span>));</span><br><span class="line">        edges.add(<span class="keyword">new</span> Edge(a11, a12, <span class="number">0</span>));</span><br><span class="line">        edges.add(<span class="keyword">new</span> Edge(a12, a13, <span class="number">0</span>));</span><br><span class="line">        edges.add(<span class="keyword">new</span> Edge(a13, a14, <span class="number">0</span>));</span><br><span class="line">        edges.add(<span class="keyword">new</span> Edge(a14, a15, <span class="number">0</span>));</span><br><span class="line">        edges.add(<span class="keyword">new</span> Edge(a15, exit, <span class="number">3</span>));</span><br><span class="line"></span><br><span class="line">        edges.add(<span class="keyword">new</span> Edge(enter, a21, <span class="number">4</span>));</span><br><span class="line">        edges.add(<span class="keyword">new</span> Edge(a21, a22, <span class="number">0</span>));</span><br><span class="line">        edges.add(<span class="keyword">new</span> Edge(a22, a23, <span class="number">0</span>));</span><br><span class="line">        edges.add(<span class="keyword">new</span> Edge(a23, a24, <span class="number">0</span>));</span><br><span class="line">        edges.add(<span class="keyword">new</span> Edge(a24, a25, <span class="number">0</span>));</span><br><span class="line">        edges.add(<span class="keyword">new</span> Edge(a25, exit, <span class="number">6</span>));</span><br><span class="line"></span><br><span class="line">        edges.add(<span class="keyword">new</span> Edge(a11, a22, <span class="number">2</span>));</span><br><span class="line">        edges.add(<span class="keyword">new</span> Edge(a21, a12, <span class="number">2</span>));</span><br><span class="line">        edges.add(<span class="keyword">new</span> Edge(a12, a23, <span class="number">3</span>));</span><br><span class="line">        edges.add(<span class="keyword">new</span> Edge(a22, a13, <span class="number">1</span>));</span><br><span class="line">        edges.add(<span class="keyword">new</span> Edge(a13, a24, <span class="number">1</span>));</span><br><span class="line">        edges.add(<span class="keyword">new</span> Edge(a23, a14, <span class="number">2</span>));</span><br><span class="line">        edges.add(<span class="keyword">new</span> Edge(a14, a25, <span class="number">3</span>));</span><br><span class="line">        edges.add(<span class="keyword">new</span> Edge(a24, a15, <span class="number">2</span>));</span><br><span class="line"></span><br><span class="line">        workingGraph.setNodes(nodes);</span><br><span class="line">        workingGraph.setEdges(edges);</span><br><span class="line">        workingGraph.setEnterNode(enter);</span><br><span class="line">        workingGraph.setExitNode(exit);</span><br><span class="line"></span><br><span class="line">        OperationSequencing operationSequencing = <span class="keyword">new</span> OperationSequencing();</span><br><span class="line">        System.out.println(operationSequencing.getShortestTime(workingGraph, exit));</span><br><span class="line">        operationSequencing.printRoutes();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 图上的节点类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Node</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 父节点</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Node&gt; parents;</span><br><span class="line">    <span class="comment">// 子节点</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Node&gt; children;</span><br><span class="line">    <span class="comment">// 流水线编号</span></span><br><span class="line">    <span class="keyword">private</span> Integer lineIndex;</span><br><span class="line">    <span class="comment">// 工作顺序编号</span></span><br><span class="line">    <span class="keyword">private</span> Integer workIndex;</span><br><span class="line">    <span class="comment">// 加工时间</span></span><br><span class="line">    <span class="keyword">private</span> Integer workTime;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">(Integer lineIndex, Integer workIndex, Integer workTime)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.children = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">this</span>.parents = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.lineIndex = lineIndex;</span><br><span class="line">        <span class="keyword">this</span>.workIndex = workIndex;</span><br><span class="line">        <span class="keyword">this</span>.workTime = workTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Node&gt; <span class="title">getParents</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> parents;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setParents</span><span class="params">(List&lt;Node&gt; parents)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.parents = parents;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addToParents</span><span class="params">(Node parent)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.parents.add(parent);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Node&gt; <span class="title">getChildren</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> children;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setChildren</span><span class="params">(List&lt;Node&gt; children)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.children = children;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addToChildren</span><span class="params">(Node child)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.children.add(child);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getLineIndex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> lineIndex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLineIndex</span><span class="params">(Integer lineIndex)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.lineIndex = lineIndex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getWorkIndex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> workIndex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setWorkIndex</span><span class="params">(Integer workIndex)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.workIndex = workIndex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getWorkTime</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> workTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setWorkTime</span><span class="params">(Integer workTime)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.workTime = workTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 边类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Edge</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 起始节点</span></span><br><span class="line">    <span class="keyword">private</span> Node startNode;</span><br><span class="line">    <span class="comment">// 结束节点</span></span><br><span class="line">    <span class="keyword">private</span> Node endNode;</span><br><span class="line">    <span class="comment">// 边的权重</span></span><br><span class="line">    <span class="keyword">private</span> Integer weight;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Edge</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Edge</span><span class="params">(Node startNode, Node endNode, Integer weight)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.startNode = startNode;</span><br><span class="line">        <span class="keyword">this</span>.endNode = endNode;</span><br><span class="line">        <span class="keyword">this</span>.weight = weight;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取两个顶点之间的直线距离</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> n1    起始节点</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> n2    结束节点</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> edges</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Integer <span class="title">getEdgeWeight</span><span class="params">(Node n1, Node n2, List&lt;Edge&gt; edges)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (Edge edge : edges) &#123;</span><br><span class="line">            <span class="keyword">if</span> (edge.getStartNode().equals(n1) &amp;&amp; edge.getEndNode().equals(n2))</span><br><span class="line">                <span class="keyword">return</span> edge.weight;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 移除与指定节点相关的边</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> Node</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> edges</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">removeEdgeWithNode</span><span class="params">(Node Node, List&lt;Edge&gt; edges)</span> </span>&#123;</span><br><span class="line">        List&lt;Edge&gt; _removeEdges = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (Edge edge : edges) &#123;</span><br><span class="line">            <span class="keyword">if</span> (edge.getStartNode().equals(Node) || edge.getEndNode().equals(Node)) &#123;</span><br><span class="line">                _removeEdges.add(edge);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (Edge edge : _removeEdges) &#123;</span><br><span class="line">            edges.remove(edge);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Node <span class="title">getStartNode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> startNode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStartNode</span><span class="params">(Node startNode)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.startNode = startNode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Node <span class="title">getEndNode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> endNode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEndNode</span><span class="params">(Node endNode)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.endNode = endNode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getWeight</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> weight;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setWeight</span><span class="params">(Integer weight)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.weight = weight;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Route</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer lineIndex;</span><br><span class="line">    <span class="keyword">private</span> Integer workIndex;</span><br><span class="line">    <span class="keyword">private</span> Integer costTime;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getLineIndex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> lineIndex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLineIndex</span><span class="params">(Integer lineIndex)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.lineIndex = lineIndex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getWorkIndex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> workIndex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setWorkIndex</span><span class="params">(Integer workIndex)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.workIndex = workIndex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getCostTime</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> costTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCostTime</span><span class="params">(Integer costTime)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.costTime = costTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Route</span><span class="params">(Integer lineIndex, Integer workIndex, Integer costTime)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.lineIndex = lineIndex;</span><br><span class="line">        <span class="keyword">this</span>.workIndex = workIndex;</span><br><span class="line">        <span class="keyword">this</span>.costTime = costTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 工作图类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WorkingGraph</span> <span class="keyword">implements</span> <span class="title">Cloneable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;Node&gt; nodes;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;Edge&gt; edges;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Node enterNode;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Node exitNode;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">WorkingGraph</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">WorkingGraph</span><span class="params">(WorkingGraph workingGraph)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.nodes = <span class="keyword">new</span> ArrayList&lt;&gt;(workingGraph.getNodes());</span><br><span class="line">        <span class="keyword">this</span>.edges = <span class="keyword">new</span> ArrayList&lt;&gt;(workingGraph.getEdges());</span><br><span class="line">        <span class="keyword">this</span>.enterNode = workingGraph.getEnterNode();</span><br><span class="line">        <span class="keyword">this</span>.exitNode = workingGraph.getExitNode();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> WorkingGraph <span class="title">clone</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        WorkingGraph o = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            o = (WorkingGraph) <span class="keyword">super</span>.clone();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (CloneNotSupportedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> o;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Node&gt; <span class="title">getNodes</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> nodes;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNodes</span><span class="params">(List&lt;Node&gt; nodes)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.nodes = nodes;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Edge&gt; <span class="title">getEdges</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> edges;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEdges</span><span class="params">(List&lt;Edge&gt; edges)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.edges = edges;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Node <span class="title">getEnterNode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> enterNode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEnterNode</span><span class="params">(Node enterNode)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.enterNode = enterNode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Node <span class="title">getExitNode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> exitNode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setExitNode</span><span class="params">(Node exitNode)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.exitNode = exitNode;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实验分析"><a href="#实验分析" class="headerlink" title="实验分析"></a>实验分析</h3><p>使用动态规划的思想，从上至下，从出口到入口。我这里还用了贪婪的策略，只需要保证每一次都是最短的工作耗时即可。</p><h2 id="最长子序列问题"><a href="#最长子序列问题" class="headerlink" title="最长子序列问题"></a>最长子序列问题</h2><h3 id="问题描述-1"><a href="#问题描述-1" class="headerlink" title="问题描述"></a>问题描述</h3><blockquote><p><em>描述并实现最长共同子序列动态规 划 算 法 ， 并 显 示 S1= ACCGGTCGAGATGCAG，S2 = GTCGTTCGGAATGCAT</em> *的最长共同子序列。 *</p><p><em>共同子序列可以是不连续的，且每个元素在母串中的位置也是可以不相同，但是顺序必须一致</em> </p></blockquote><h3 id="源代码-1"><a href="#源代码-1" class="headerlink" title="源代码"></a>源代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * MaxSubsequence</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 描述并实现最长共同子序列动态规 划 算 法 ， 并 显 示 S1= ACCGGTCGAGATGCAG，S2 = GTCGTTCGGAATGCAT</span></span><br><span class="line"><span class="comment"> * 的最长共同子序列。 共同子序列可以是不连续的，且每个元素在母串中的位置也是可以不相同，但是顺序必须一致</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MaxSubsequence</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 求解最长子序列</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> str1 字符串1</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> str2 字符串2</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">lcs</span><span class="params">(String str1, String str2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> len1 = str1.length();</span><br><span class="line">        <span class="keyword">int</span> len2 = str2.length();</span><br><span class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        <span class="keyword">int</span> c[][] = <span class="keyword">new</span> <span class="keyword">int</span>[len1 + <span class="number">1</span>][len2 + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= len1; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= len2; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (i == <span class="number">0</span> || j == <span class="number">0</span>) &#123;</span><br><span class="line">                    c[i][j] = <span class="number">0</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (str1.charAt(i - <span class="number">1</span>) == str2.charAt(j - <span class="number">1</span>)) &#123;</span><br><span class="line">                    c[i][j] = c[i - <span class="number">1</span>][j - <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    c[i][j] = Math.max(c[i - <span class="number">1</span>][j], c[i][j - <span class="number">1</span>]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">0</span>; m &lt; Math.max(len1, len2); m++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> n = <span class="number">0</span>; n &lt; Math.max(len1, len2); n++) &#123;</span><br><span class="line">                System.out.print(c[m][n] + <span class="string">"\t"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> m = len1;</span><br><span class="line">        <span class="keyword">int</span> n = len2;</span><br><span class="line">        <span class="keyword">while</span> (c[m][n] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (str1.charAt(m - <span class="number">1</span>) == str2.charAt(n - <span class="number">1</span>)) &#123;</span><br><span class="line">                sb.append(str1.charAt(m - <span class="number">1</span>));</span><br><span class="line">                m--;</span><br><span class="line">                n--;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (c[m][n] == c[m][n - <span class="number">1</span>]) &#123;</span><br><span class="line">                n--;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (c[m][n] == c[m - <span class="number">1</span>][n]) &#123;</span><br><span class="line">                m--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sb.reverse().toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成最长子序列的字符串</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> arr  比较矩阵</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> str1 字符串1</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> str2 字符串2</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">generateLcs</span><span class="params">(<span class="keyword">int</span>[][] arr, String str1, String str2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> m = arr.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> n = arr[<span class="number">0</span>].length - <span class="number">1</span>;</span><br><span class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        <span class="keyword">while</span> (arr[m][n] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (str1.charAt(m) == str2.charAt(n)) &#123;</span><br><span class="line">                sb.append(str1.charAt(m));</span><br><span class="line">                m--;</span><br><span class="line">                n--;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (arr[m][n] == arr[m][n - <span class="number">1</span>]) &#123;</span><br><span class="line">                n--;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (arr[m][n] == arr[m - <span class="number">1</span>][n]) &#123;</span><br><span class="line">                m--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(sb.reverse().toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        MaxSubsequence maxSubsequence = <span class="keyword">new</span> MaxSubsequence();</span><br><span class="line">        String ms = maxSubsequence.lcs(<span class="string">"ACCGGTCGAGATGCAG"</span>, <span class="string">"GTCGTTCGGAATGCAT"</span>);</span><br><span class="line">        System.out.println(ms);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实验结果"><a href="#实验结果" class="headerlink" title="实验结果"></a>实验结果</h3><h4 id="生成的子序列矩阵"><a href="#生成的子序列矩阵" class="headerlink" title="生成的子序列矩阵"></a>生成的子序列矩阵</h4><img src="https://img.tanknee.cn/blogpicbed/2020/04/2020041270c9c82d18684.png"/><h4 id="查找到的最长子序列"><a href="#查找到的最长子序列" class="headerlink" title="查找到的最长子序列"></a>查找到的最长子序列</h4><img src="https://img.tanknee.cn/blogpicbed/2020/04/20200412903233dbf1532.png"/><h3 id="实验分析-1"><a href="#实验分析-1" class="headerlink" title="实验分析"></a>实验分析</h3><p>实现最长子序列的关键在于创建最长子序列矩阵，这里是使用二维数组来实现的，每一个点都与其上方，左边，左上方这三个点相关，是在判断对应字符相等于否的基础上，根据这几个点来确定当前点的值。当到达最右下角的点时，也就是点<code>dist[dist.length-1][dist.lenght-1]</code>时，也就得到了最长共同子序列的长度，然后再使用逆向思维获取最终的序列。</p><p>并且最长子序列并不是唯一的，可能有多个值，这取决于你选择的打印方式。</p><h2 id="思考题"><a href="#思考题" class="headerlink" title="思考题"></a>思考题</h2><ol><li>动态规划算法范式是什么？</li></ol><p>动态规划与分治法相似，但是动态规划所划分的子问题并不是完全相互独立的，是有可能相互关联的，如果使用分治法来实现就有可能重复处理子问题，造成资源浪费。</p><p>动态规划需要将问题分为子问题，前一个子问题为后一个子问题提供信息，并且每一次求解时需要存储之前的结果，以期得到最佳答案。</p><ol start="2"><li>利用动态规划算法设计方法解决矩阵链相乘问题？</li></ol><p>矩阵链相乘问题在于寻找最好的括号加法，对于$A_{i~j}(使用该符号来代表矩阵A_i<em>A_{i+1}</em>..*A_j的最佳值)$可以选取一个数<code>k</code>,其中$i≤k≤j$成立,并且<code>k</code>是<code>i</code>到<code>j</code>中的最佳分割点，即括号的所在处，那么我们的乘法矩阵<code>m[][]</code>就可以表示为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if(i&#x3D;&#x3D;j)&#123;</span><br><span class="line">m[i][i] &#x3D; 0;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">m[i][j]&#x3D;min&#123;m[i][k] + m[k+1][j] + Pi-1PkPj&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后使用自底向上的思想就可以计算出最佳括号加法获得问题的解</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Code" scheme="https://www.tanknee.cn/categories/Code/"/>
    
    
      <category term="flag" scheme="https://www.tanknee.cn/tags/flag/"/>
    
      <category term="o" scheme="https://www.tanknee.cn/tags/o/"/>
    
      <category term="line" scheme="https://www.tanknee.cn/tags/line/"/>
    
      <category term="length" scheme="https://www.tanknee.cn/tags/length/"/>
    
      <category term="node" scheme="https://www.tanknee.cn/tags/node/"/>
    
      <category term="字符" scheme="https://www.tanknee.cn/tags/%E5%AD%97%E7%AC%A6/"/>
    
      <category term="算法" scheme="https://www.tanknee.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="节点" scheme="https://www.tanknee.cn/tags/%E8%8A%82%E7%82%B9/"/>
    
      <category term="int" scheme="https://www.tanknee.cn/tags/int/"/>
    
      <category term="arr" scheme="https://www.tanknee.cn/tags/arr/"/>
    
      <category term="this" scheme="https://www.tanknee.cn/tags/this/"/>
    
      <category term="return" scheme="https://www.tanknee.cn/tags/return/"/>
    
      <category term="public" scheme="https://www.tanknee.cn/tags/public/"/>
    
      <category term="integer" scheme="https://www.tanknee.cn/tags/integer/"/>
    
      <category term="new" scheme="https://www.tanknee.cn/tags/new/"/>
    
      <category term="edge" scheme="https://www.tanknee.cn/tags/edge/"/>
    
  </entry>
  
  <entry>
    <title>算法分析入门系列(四) 最短路径算法</title>
    <link href="https://www.tanknee.cn/2020/04/15/alogrithmanalysis_4/"/>
    <id>https://www.tanknee.cn/2020/04/15/alogrithmanalysis_4/</id>
    <published>2020-04-15T09:00:00.000Z</published>
    <updated>2020-06-01T14:59:44.617Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="单源最短路径算法"><a href="#单源最短路径算法" class="headerlink" title="单源最短路径算法"></a>单源最短路径算法</h2><img src="https://img.tanknee.cn/blogpicbed/2020/04/2020040778f593c139c85.png"/><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>从s点出发到达其他点的最短路径</p><h3 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShortestPath</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 定义顶点Vertex类</span></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Vertex</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span> infinite_dis = Integer.MAX_VALUE;</span><br><span class="line">        <span class="keyword">private</span> String name; <span class="comment">// 节点名字</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">boolean</span> known; <span class="comment">// 此节点是否已知</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> adjuDist; <span class="comment">// 此节点距离</span></span><br><span class="line">        <span class="keyword">private</span> Vertex parent; <span class="comment">// 当前从初始化节点到此节点的最短路径下的父亲节点</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Vertex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.known = <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">this</span>.adjuDist = infinite_dis;</span><br><span class="line">            <span class="keyword">this</span>.parent = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Vertex</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>();</span><br><span class="line">            <span class="keyword">this</span>.name = name;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Vertex <span class="title">getParent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> parent;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setParent</span><span class="params">(Vertex parent)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.parent = parent;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object obj)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span>.getName() == ((Vertex) obj).getName()) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span>.name == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> NullPointerException(<span class="string">"name of Vertex to be compared cannot be null!"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getInfiniteDis</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> infinite_dis;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> name;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.name = name;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isKnown</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> known;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setKnown</span><span class="params">(<span class="keyword">boolean</span> known)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.known = known;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAdjuDist</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> adjuDist;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAdjuDist</span><span class="params">(<span class="keyword">int</span> adjuDist)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.adjuDist = adjuDist;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Edge</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 此有向边的起始点</span></span><br><span class="line">        <span class="keyword">private</span> Vertex startVertex;</span><br><span class="line">        <span class="comment">// 此有向边的终点</span></span><br><span class="line">        <span class="keyword">private</span> Vertex endVertex;</span><br><span class="line">        <span class="comment">// 此有向边的权值</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> weight;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Edge</span><span class="params">(Vertex startVertex, Vertex endVertex, <span class="keyword">int</span> weight)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.startVertex = startVertex;</span><br><span class="line">            <span class="keyword">this</span>.endVertex = endVertex;</span><br><span class="line">            <span class="keyword">this</span>.weight = weight;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Vertex <span class="title">getStartVertex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> startVertex;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStartVertex</span><span class="params">(Vertex startVertex)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.startVertex = startVertex;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Vertex <span class="title">getEndVertex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> endVertex;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEndVertex</span><span class="params">(Vertex endVertex)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.endVertex = endVertex;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getWeight</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> weight;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setWeight</span><span class="params">(<span class="keyword">int</span> weight)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.weight = weight;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;Vertex&gt; vertexList; <span class="comment">// 图的顶点集</span></span><br><span class="line">    <span class="keyword">private</span> Map&lt;Vertex, List&lt;Edge&gt;&gt; ver_edgeList_map; <span class="comment">// 图的每个顶点对应的有向边</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ShortestPath</span><span class="params">(List&lt;Vertex&gt; vertexList, Map&lt;Vertex, List&lt;Edge&gt;&gt; ver_edgeList_map)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.vertexList = vertexList;</span><br><span class="line">        <span class="keyword">this</span>.ver_edgeList_map = ver_edgeList_map;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRoot</span><span class="params">(Vertex v)</span> </span>&#123;</span><br><span class="line">        v.setParent(<span class="keyword">null</span>);</span><br><span class="line">        v.setAdjuDist(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">updateChildren</span><span class="params">(Vertex v)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (v == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ver_edgeList_map.get(v) == <span class="keyword">null</span> || ver_edgeList_map.get(v).size() == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;Vertex&gt; childrenList = <span class="keyword">new</span> LinkedList&lt;Vertex&gt;();</span><br><span class="line">        <span class="keyword">for</span> (Edge e : ver_edgeList_map.get(v)) &#123;</span><br><span class="line">            Vertex childVertex = e.getEndVertex();</span><br><span class="line">            <span class="keyword">if</span> (!childVertex.isKnown()) &#123;</span><br><span class="line">                childVertex.setKnown(<span class="keyword">true</span>);</span><br><span class="line">                childVertex.setAdjuDist(v.getAdjuDist() + e.getWeight());</span><br><span class="line">                childVertex.setParent(v);</span><br><span class="line">                childrenList.add(childVertex);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> nowDist = v.getAdjuDist() + e.getWeight();</span><br><span class="line">            <span class="keyword">if</span> (nowDist &gt;= childVertex.getAdjuDist()) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                childVertex.setAdjuDist(nowDist);</span><br><span class="line">                childVertex.setParent(v);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (Vertex vc : childrenList) &#123;</span><br><span class="line">            updateChildren(vc);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">shortestPathTravasal</span><span class="params">(<span class="keyword">int</span> startIndex, <span class="keyword">int</span> destIndex)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Vertex start = vertexList.get(startIndex);</span><br><span class="line">        Vertex dest = vertexList.get(destIndex);</span><br><span class="line">        String path = <span class="string">"["</span> + dest.getName() + <span class="string">"]"</span>;</span><br><span class="line"></span><br><span class="line">        setRoot(start);</span><br><span class="line"></span><br><span class="line">        updateChildren(vertexList.get(startIndex));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> shortest_length = dest.getAdjuDist();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> ((dest.getParent() != <span class="keyword">null</span>) &amp;&amp; (!dest.equals(start))) &#123;</span><br><span class="line">            path = <span class="string">"["</span> + dest.getParent().getName() + <span class="string">"] --&gt; "</span> + path;</span><br><span class="line">            dest = dest.getParent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"["</span> + vertexList.get(startIndex).getName() + <span class="string">"] to ["</span> + vertexList.get(destIndex).getName()</span><br><span class="line">                + <span class="string">"] ShortestPath shortest path: "</span> + path);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"shortest length:"</span> + shortest_length);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Vertex s = <span class="keyword">new</span> Vertex(<span class="string">"s"</span>);</span><br><span class="line">        Vertex t = <span class="keyword">new</span> Vertex(<span class="string">"t"</span>);</span><br><span class="line">        Vertex x = <span class="keyword">new</span> Vertex(<span class="string">"x"</span>);</span><br><span class="line">        Vertex y = <span class="keyword">new</span> Vertex(<span class="string">"y"</span>);</span><br><span class="line">        Vertex z = <span class="keyword">new</span> Vertex(<span class="string">"z"</span>);</span><br><span class="line">        List&lt;Vertex&gt; verList = <span class="keyword">new</span> LinkedList&lt;ShortestPath.Vertex&gt;();</span><br><span class="line">        verList.add(s);</span><br><span class="line">        verList.add(t);</span><br><span class="line">        verList.add(x);</span><br><span class="line">        verList.add(y);</span><br><span class="line">        verList.add(z);</span><br><span class="line"></span><br><span class="line">        Map&lt;Vertex, List&lt;Edge&gt;&gt; vertex_edgeList_map = <span class="keyword">new</span> HashMap&lt;Vertex, List&lt;Edge&gt;&gt;();</span><br><span class="line"></span><br><span class="line">        List&lt;Edge&gt; sList = <span class="keyword">new</span> LinkedList&lt;ShortestPath.Edge&gt;();</span><br><span class="line">        sList.add(<span class="keyword">new</span> Edge(s, t, <span class="number">6</span>));</span><br><span class="line">        sList.add(<span class="keyword">new</span> Edge(s, y, <span class="number">7</span>));</span><br><span class="line">        List&lt;Edge&gt; tList = <span class="keyword">new</span> LinkedList&lt;ShortestPath.Edge&gt;();</span><br><span class="line">        tList.add(<span class="keyword">new</span> Edge(t, y, <span class="number">8</span>));</span><br><span class="line">        tList.add(<span class="keyword">new</span> Edge(t, x, <span class="number">5</span>));</span><br><span class="line">        List&lt;Edge&gt; xList = <span class="keyword">new</span> LinkedList&lt;ShortestPath.Edge&gt;();</span><br><span class="line">        xList.add(<span class="keyword">new</span> Edge(x, t, -<span class="number">2</span>));</span><br><span class="line"></span><br><span class="line">        List&lt;Edge&gt; yList = <span class="keyword">new</span> LinkedList&lt;ShortestPath.Edge&gt;();</span><br><span class="line">        yList.add(<span class="keyword">new</span> Edge(y, x, -<span class="number">3</span>));</span><br><span class="line">        yList.add(<span class="keyword">new</span> Edge(y, z, <span class="number">9</span>));</span><br><span class="line"></span><br><span class="line">        List&lt;Edge&gt; zList = <span class="keyword">new</span> LinkedList&lt;ShortestPath.Edge&gt;();</span><br><span class="line">        zList.add(<span class="keyword">new</span> Edge(z, x, <span class="number">7</span>));</span><br><span class="line">        vertex_edgeList_map.put(s, sList);</span><br><span class="line">        vertex_edgeList_map.put(t, tList);</span><br><span class="line">        vertex_edgeList_map.put(x, xList);</span><br><span class="line">        vertex_edgeList_map.put(y, yList);</span><br><span class="line">        vertex_edgeList_map.put(z, zList);</span><br><span class="line"></span><br><span class="line">        ShortestPath g = <span class="keyword">new</span> ShortestPath(verList, vertex_edgeList_map);</span><br><span class="line">        g.shortestPathTravasal(<span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">        g.shortestPathTravasal(<span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line">        g.shortestPathTravasal(<span class="number">0</span>, <span class="number">3</span>);</span><br><span class="line">        g.shortestPathTravasal(<span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实验结果"><a href="#实验结果" class="headerlink" title="实验结果"></a>实验结果</h3><img src="https://img.tanknee.cn/blogpicbed/2020/04/20200412aca12d01cbd59.png"/><h2 id="全点对最短路径"><a href="#全点对最短路径" class="headerlink" title="全点对最短路径"></a>全点对最短路径</h2><img src="https://img.tanknee.cn/blogpicbed/2020/04/202004070372d0be33e39.png"/><h3 id="问题描述-1"><a href="#问题描述-1" class="headerlink" title="问题描述"></a>问题描述</h3><p>单点到另外一个点的最短距离</p><h3 id="源代码-1"><a href="#源代码-1" class="headerlink" title="源代码"></a>源代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 全点对最短路径算法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FullPointPairShortestPath</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        List&lt;InnerEdge&gt; innerEdges = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        innerEdges.add(<span class="keyword">new</span> InnerEdge(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>));</span><br><span class="line">        innerEdges.add(<span class="keyword">new</span> InnerEdge(<span class="number">1</span>, <span class="number">3</span>, <span class="number">8</span>));</span><br><span class="line">        innerEdges.add(<span class="keyword">new</span> InnerEdge(<span class="number">1</span>, <span class="number">5</span>, -<span class="number">4</span>));</span><br><span class="line">        innerEdges.add(<span class="keyword">new</span> InnerEdge(<span class="number">2</span>, <span class="number">5</span>, <span class="number">7</span>));</span><br><span class="line">        innerEdges.add(<span class="keyword">new</span> InnerEdge(<span class="number">2</span>, <span class="number">4</span>, <span class="number">1</span>));</span><br><span class="line">        innerEdges.add(<span class="keyword">new</span> InnerEdge(<span class="number">3</span>, <span class="number">2</span>, <span class="number">4</span>));</span><br><span class="line">        innerEdges.add(<span class="keyword">new</span> InnerEdge(<span class="number">4</span>, <span class="number">1</span>, <span class="number">2</span>));</span><br><span class="line">        innerEdges.add(<span class="keyword">new</span> InnerEdge(<span class="number">4</span>, <span class="number">3</span>, -<span class="number">5</span>));</span><br><span class="line">        innerEdges.add(<span class="keyword">new</span> InnerEdge(<span class="number">5</span>, <span class="number">4</span>, <span class="number">6</span>));</span><br><span class="line">        <span class="keyword">int</span>[][] dist = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">5</span>][<span class="number">5</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; dist.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; dist[i].length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (i == j) &#123;</span><br><span class="line">                    dist[i][j] = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                dist[i][j] = Integer.MAX_VALUE / <span class="number">3</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (InnerEdge innerEdge : innerEdges) &#123;</span><br><span class="line">            dist[innerEdge.getStartIndex() - <span class="number">1</span>][innerEdge.getEndIndex() - <span class="number">1</span>] = innerEdge.getWeight();</span><br><span class="line">        &#125;</span><br><span class="line">        getFullPointPairShortestPath(dist);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getFullPointPairShortestPath</span><span class="params">(<span class="keyword">int</span>[][] dist)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; dist.length; k++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; dist.length; i++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; dist.length; j++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (dist[i][j] &gt; dist[i][k] + dist[k][j]) &#123;</span><br><span class="line">                        dist[i][j] = dist[i][k] + dist[k][j];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.print(<span class="string">"\t"</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; dist.length; i++) &#123;</span><br><span class="line">            System.out.print(i + <span class="number">1</span> + <span class="string">"\t"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; dist.length; i++) &#123;</span><br><span class="line">            System.out.print(i + <span class="number">1</span> + <span class="string">"\t"</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; dist.length; j++) &#123;</span><br><span class="line">                System.out.print(dist[i][j] + <span class="string">"\t"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * InnerEdge</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">InnerEdge</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer startIndex;</span><br><span class="line">    <span class="keyword">private</span> Integer endIndex;</span><br><span class="line">    <span class="keyword">private</span> Integer weight;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">InnerEdge</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getStartIndex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> startIndex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStartIndex</span><span class="params">(Integer startIndex)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.startIndex = startIndex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getEndIndex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> endIndex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEndIndex</span><span class="params">(Integer endIndex)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.endIndex = endIndex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getWeight</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> weight;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setWeight</span><span class="params">(Integer weight)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.weight = weight;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">InnerEdge</span><span class="params">(Integer startIndex, Integer endIndex, Integer weight)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.startIndex = startIndex;</span><br><span class="line">        <span class="keyword">this</span>.endIndex = endIndex;</span><br><span class="line">        <span class="keyword">this</span>.weight = weight;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实验结果-1"><a href="#实验结果-1" class="headerlink" title="实验结果"></a>实验结果</h3><img src="https://img.tanknee.cn/blogpicbed/2020/04/20200412693321658bd4f.png"/><h2 id="思考题"><a href="#思考题" class="headerlink" title="思考题"></a>思考题</h2><ol><li>全点对最短路径算法动态规划算法范式 </li></ol><p>寻找两点间的最佳中转点</p><ol start="2"><li>图的存储方式和运算效率之间的关系</li></ol><p>使用数组来存储更加高效，使用Java对象来存储更加清晰明了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Code" scheme="https://www.tanknee.cn/categories/Code/"/>
    
    
      <category term="Java" scheme="https://www.tanknee.cn/tags/Java/"/>
    
      <category term="对象" scheme="https://www.tanknee.cn/tags/%E5%AF%B9%E8%B1%A1/"/>
    
      <category term="length" scheme="https://www.tanknee.cn/tags/length/"/>
    
      <category term="算法" scheme="https://www.tanknee.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="节点" scheme="https://www.tanknee.cn/tags/%E8%8A%82%E7%82%B9/"/>
    
      <category term="int" scheme="https://www.tanknee.cn/tags/int/"/>
    
      <category term="this" scheme="https://www.tanknee.cn/tags/this/"/>
    
      <category term="return" scheme="https://www.tanknee.cn/tags/return/"/>
    
      <category term="public" scheme="https://www.tanknee.cn/tags/public/"/>
    
      <category term="new" scheme="https://www.tanknee.cn/tags/new/"/>
    
      <category term="vertex" scheme="https://www.tanknee.cn/tags/vertex/"/>
    
      <category term="dist" scheme="https://www.tanknee.cn/tags/dist/"/>
    
  </entry>
  
  <entry>
    <title>算法分析入门系列(二) 分治算法</title>
    <link href="https://www.tanknee.cn/2020/04/15/algorithmanalysis_1-1/"/>
    <id>https://www.tanknee.cn/2020/04/15/algorithmanalysis_1-1/</id>
    <published>2020-04-15T08:59:00.000Z</published>
    <updated>2020-06-01T14:59:44.616Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="Strassen矩阵算法"><a href="#Strassen矩阵算法" class="headerlink" title="Strassen矩阵算法"></a>Strassen矩阵算法</h2><h3 id="矩阵分割"><a href="#矩阵分割" class="headerlink" title="矩阵分割"></a>矩阵分割</h3><p>将$N<em>N$的矩阵分割为$\frac{N}{2}</em>\frac{N}{2}$的两个矩阵，在这个相乘的过程中我们发现一共有四次加法，八次乘法。</p><img src="https://img.tanknee.cn/blogpicbed/2020/03/20200316b4a8dd7b0aa4f.png"/><p>而后就可以获得这个算法的递推公式：<br>$$<br>T(N) = 8*T(\frac{N}{2}) + Θ(N^2)<br>$$<br><img src="https://www.zhihu.com/equation?tex=+S_1+%3D+B_%7B12%7D+-+B_%7B22%7D%5C%5C+S_2+%3D+A_%7B11%7D+%2B+A_%7B12%7D%5C%5CS_3+%3D+A_%7B21%7D+%2B+A_%7B22%7D%5C%5CS_4+%3D+B_%7B21%7D+-+B_%7B11%7D%5C%5CS_5+%3D+A_%7B11%7D+%2B+A_%7B22%7D%5C%5CS_6+%3D+B_%7B11%7D+%2B+B_%7B22%7D%5C%5CS_7+%3D+A_%7B12%7D+-+A_%7B22%7D%5C%5CS_8+%3D+B_%7B21%7D+%2B+B_%7B22%7D%5C%5CS_9+%3D+A_%7B11%7D+-+A_%7B21%7D%5C%5CS_%7B10%7D+%3D+B_%7B11%7D+%2B+B_%7B12%7D" alt=""></p><h3 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * StrassenMatrix</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StrassenMatrix</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printMatrix</span><span class="params">(Matrix matrix, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">                System.out.print(matrix.matrix[i][j] + <span class="string">" "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 矩阵分割</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> M</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> M11</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> M12</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> M21</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> M22</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> n</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Divide</span><span class="params">(Matrix M, Matrix M11, Matrix M12, Matrix M21, Matrix M22, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 遍历整个M矩阵，将M的不同区域分割给不同的四个矩阵 通过一个常数n来划分，每个矩阵的数之间都隔了n，所以 不会有重复出现</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">                M11.matrix[i][j] = M.matrix[i][j];</span><br><span class="line">                M12.matrix[i][j] = M.matrix[i][j + n];</span><br><span class="line">                M21.matrix[i][j] = M.matrix[i + n][j];</span><br><span class="line">                M22.matrix[i][j] = M.matrix[i + n][j + n];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/***</span></span><br><span class="line"><span class="comment">     * 矩阵合并</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> M</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> M11</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> M12</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> M21</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> M22</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Matrix <span class="title">MergeMatrix</span><span class="params">(Matrix M11, Matrix M12, Matrix M21, Matrix M22, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        Matrix _return = <span class="keyword">new</span> Matrix();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">                _return.matrix[i][j] = M11.matrix[i][j];</span><br><span class="line">                _return.matrix[i][j + n] = M12.matrix[i][j];</span><br><span class="line">                _return.matrix[i + n][j] = M21.matrix[i][j];</span><br><span class="line">                _return.matrix[i + n][j + n] = M22.matrix[i][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> _return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 阶数为2的矩阵乘法--Strassen法</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> x</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> y</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Matrix <span class="title">MatrixMultiplication</span><span class="params">(Matrix x, Matrix y)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> M1, M2, M3, M4, M5, M6, M7;</span><br><span class="line">        M1 = x.matrix[<span class="number">0</span>][<span class="number">0</span>] * (y.matrix[<span class="number">0</span>][<span class="number">1</span>] - y.matrix[<span class="number">1</span>][<span class="number">1</span>]);</span><br><span class="line">        M2 = y.matrix[<span class="number">1</span>][<span class="number">1</span>] * (x.matrix[<span class="number">0</span>][<span class="number">0</span>] + x.matrix[<span class="number">0</span>][<span class="number">1</span>]);</span><br><span class="line">        M3 = y.matrix[<span class="number">0</span>][<span class="number">0</span>] * (x.matrix[<span class="number">1</span>][<span class="number">0</span>] + x.matrix[<span class="number">1</span>][<span class="number">1</span>]);</span><br><span class="line">        M4 = x.matrix[<span class="number">1</span>][<span class="number">1</span>] * (y.matrix[<span class="number">1</span>][<span class="number">0</span>] - y.matrix[<span class="number">0</span>][<span class="number">0</span>]);</span><br><span class="line">        M5 = (x.matrix[<span class="number">0</span>][<span class="number">0</span>] * y.matrix[<span class="number">0</span>][<span class="number">0</span>] + x.matrix[<span class="number">0</span>][<span class="number">0</span>] * y.matrix[<span class="number">1</span>][<span class="number">1</span>])</span><br><span class="line">                + (x.matrix[<span class="number">1</span>][<span class="number">1</span>] * y.matrix[<span class="number">0</span>][<span class="number">0</span>] + x.matrix[<span class="number">1</span>][<span class="number">1</span>] * y.matrix[<span class="number">1</span>][<span class="number">1</span>]);</span><br><span class="line">        M6 = (x.matrix[<span class="number">0</span>][<span class="number">1</span>] * y.matrix[<span class="number">1</span>][<span class="number">0</span>] + x.matrix[<span class="number">0</span>][<span class="number">1</span>] * y.matrix[<span class="number">1</span>][<span class="number">1</span>])</span><br><span class="line">                - (x.matrix[<span class="number">1</span>][<span class="number">1</span>] * y.matrix[<span class="number">1</span>][<span class="number">0</span>] + x.matrix[<span class="number">1</span>][<span class="number">1</span>] * y.matrix[<span class="number">1</span>][<span class="number">1</span>]);</span><br><span class="line">        M7 = (x.matrix[<span class="number">0</span>][<span class="number">0</span>] * y.matrix[<span class="number">0</span>][<span class="number">0</span>] + x.matrix[<span class="number">0</span>][<span class="number">0</span>] * y.matrix[<span class="number">0</span>][<span class="number">1</span>])</span><br><span class="line">                - (x.matrix[<span class="number">1</span>][<span class="number">0</span>] * y.matrix[<span class="number">0</span>][<span class="number">0</span>] + x.matrix[<span class="number">1</span>][<span class="number">0</span>] * y.matrix[<span class="number">0</span>][<span class="number">1</span>]);</span><br><span class="line">        Matrix _return = <span class="keyword">new</span> Matrix();</span><br><span class="line">        _return.matrix[<span class="number">0</span>][<span class="number">0</span>] = M5 + M4 - M2 + M6;</span><br><span class="line">        _return.matrix[<span class="number">1</span>][<span class="number">0</span>] = M1 + M2;</span><br><span class="line">        _return.matrix[<span class="number">0</span>][<span class="number">1</span>] = M3 + M4;</span><br><span class="line">        _return.matrix[<span class="number">1</span>][<span class="number">1</span>] = M5 + M1 - M3 - M7;</span><br><span class="line">        <span class="keyword">return</span> _return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 矩阵乘法，阶数大于2</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> x</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> y</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> n</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Matrix <span class="title">MatrixMultiplication</span><span class="params">(Matrix x, Matrix y, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        Matrix A11 = <span class="keyword">new</span> Matrix();</span><br><span class="line">        Matrix A12 = <span class="keyword">new</span> Matrix();</span><br><span class="line">        Matrix A21 = <span class="keyword">new</span> Matrix();</span><br><span class="line">        Matrix A22 = <span class="keyword">new</span> Matrix();</span><br><span class="line">        Matrix B11 = <span class="keyword">new</span> Matrix();</span><br><span class="line">        Matrix B12 = <span class="keyword">new</span> Matrix();</span><br><span class="line">        Matrix B21 = <span class="keyword">new</span> Matrix();</span><br><span class="line">        Matrix B22 = <span class="keyword">new</span> Matrix();</span><br><span class="line">        Matrix C11 = <span class="keyword">new</span> Matrix();</span><br><span class="line">        Matrix C12 = <span class="keyword">new</span> Matrix();</span><br><span class="line">        Matrix C21 = <span class="keyword">new</span> Matrix();</span><br><span class="line">        Matrix C22 = <span class="keyword">new</span> Matrix();</span><br><span class="line">        Matrix M1, M2, M3, M4, M5, M6, M7;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> MatrixMultiplication(x, y);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            Matrix C = <span class="keyword">null</span>;</span><br><span class="line">            Divide(x, A11, A12, A21, A22, n / <span class="number">2</span>);</span><br><span class="line">            Divide(y, B11, B12, B21, B22, n / <span class="number">2</span>);</span><br><span class="line">            <span class="comment">// Divide(C, C11, C12, C21, C22, n / 2);</span></span><br><span class="line">            n /= <span class="number">2</span>;</span><br><span class="line">            M1 = MatrixMultiplication(A11, MatrixModified(B12, B22, n, <span class="keyword">false</span>), n);</span><br><span class="line">            M2 = MatrixMultiplication(MatrixModified(A11, A12, n, <span class="keyword">true</span>), B22, n);</span><br><span class="line">            M3 = MatrixMultiplication(MatrixModified(A21, A22, n, <span class="keyword">true</span>), B11, n);</span><br><span class="line">            M4 = MatrixMultiplication(A22, MatrixModified(B21, B11, n, <span class="keyword">false</span>), n);</span><br><span class="line">            M5 = MatrixMultiplication(MatrixModified(A11, A22, n, <span class="keyword">true</span>), MatrixModified(B11, B22, n, <span class="keyword">true</span>), n);</span><br><span class="line">            M6 = MatrixMultiplication(MatrixModified(A12, A22, n, <span class="keyword">false</span>), MatrixModified(B21, B22, n, <span class="keyword">true</span>), n);</span><br><span class="line">            M7 = MatrixMultiplication(MatrixModified(A11, A21, n, <span class="keyword">false</span>), MatrixModified(B11, B12, n, <span class="keyword">true</span>), n);</span><br><span class="line">            C11 = MatrixModified(MatrixModified(M5, M4, n, <span class="keyword">true</span>), MatrixModified(M2, M6, n, <span class="keyword">false</span>), n, <span class="keyword">false</span>);</span><br><span class="line">            C12 = MatrixModified(M1, M2, n, <span class="keyword">true</span>);</span><br><span class="line">            C21 = MatrixModified(M3, M4, n, <span class="keyword">true</span>);</span><br><span class="line">            C22 = MatrixModified(MatrixModified(M5, M1, n, <span class="keyword">true</span>), MatrixModified(M3, M7, n, <span class="keyword">true</span>), n, <span class="keyword">false</span>);</span><br><span class="line">            C = MergeMatrix(C11, C12, C21, C22, n);</span><br><span class="line">            <span class="keyword">return</span> C;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 矩阵加减法</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> x</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> y</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Matrix <span class="title">MatrixModified</span><span class="params">(Matrix x, Matrix y, <span class="keyword">int</span> n, Boolean isPlus)</span> </span>&#123;</span><br><span class="line">        Matrix _return = <span class="keyword">new</span> Matrix();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">                <span class="keyword">if</span> (isPlus) &#123;</span><br><span class="line">                    _return.matrix[i][j] = x.matrix[i][j] + y.matrix[i][j];</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    _return.matrix[i][j] = x.matrix[i][j] - y.matrix[i][j];</span><br><span class="line">                &#125;</span><br><span class="line">        <span class="keyword">return</span> _return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        StrassenMatrix strassenMatrix = <span class="keyword">new</span> StrassenMatrix();</span><br><span class="line">        <span class="comment">// int[][] M_X = &#123; &#123; 1, 1 &#125;, &#123; 1, 1 &#125; &#125;;</span></span><br><span class="line">        <span class="comment">// int[][] M_Y = &#123; &#123; 1, 1 &#125;, &#123; 1, 1 &#125; &#125;;</span></span><br><span class="line">        <span class="keyword">int</span>[][] M_X = &#123; &#123; <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span> &#125;, &#123; <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span> &#125;, &#123; <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span> &#125;,</span><br><span class="line">                &#123; <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span> &#125;, &#123; <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span> &#125;, &#123; <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span> &#125;,</span><br><span class="line">                &#123; <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span> &#125;, &#123; <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span> &#125; &#125;;</span><br><span class="line">        <span class="keyword">int</span>[][] M_Y = &#123; &#123; <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span> &#125;, &#123; <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span> &#125;, &#123; <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span> &#125;,</span><br><span class="line">                &#123; <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span> &#125;, &#123; <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span> &#125;, &#123; <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span> &#125;,</span><br><span class="line">                &#123; <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span> &#125;, &#123; <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span> &#125; &#125;;</span><br><span class="line">        Matrix x = <span class="keyword">new</span> Matrix();</span><br><span class="line">        Matrix y = <span class="keyword">new</span> Matrix();</span><br><span class="line">        x.matrix = M_X;</span><br><span class="line">        y.matrix = M_Y;</span><br><span class="line">        Matrix result = strassenMatrix.MatrixMultiplication(x, y, <span class="number">8</span>);</span><br><span class="line">        strassenMatrix.printMatrix(result, <span class="number">8</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Matrix</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[][] matrix = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">32</span>][<span class="number">32</span>];</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Matrix</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实验数据"><a href="#实验数据" class="headerlink" title="实验数据"></a>实验数据</h3><p>两个$8*8$的单位矩阵相乘</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[][] M_X = &#123; </span><br><span class="line">    &#123; <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span> &#125;, </span><br><span class="line">    &#123; <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span> &#125;, </span><br><span class="line">    &#123; <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span> &#125;,</span><br><span class="line">    &#123; <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span> &#125;, </span><br><span class="line">    &#123; <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span> &#125;, </span><br><span class="line">    &#123; <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span> &#125;,</span><br><span class="line">    &#123; <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span> &#125;, </span><br><span class="line">    &#123; <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span> &#125; </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="实验分析"><a href="#实验分析" class="headerlink" title="实验分析"></a>实验分析</h3><p>原始算法中矩阵乘法的时间复杂度为$O(n^3)$,而在Strassen算法中降低到$O(n^{\log_2^7})$。</p><p>因为在普通的矩阵乘法中，需要进行8次阶数减半的子矩阵递归相乘，再加上矩阵相加与合并的时间，就会使得简单的矩阵乘法变得极为缓慢，而最主要的时间是用在8次矩阵相乘。<br>$$<br>T(N) = 8*T(\frac{N}{2}) + Θ(N^2)<br>$$<br>Strassen算法最主要的贡献就是将8次矩阵乘法减少到了7次，使得整个算法的复杂度有所降低。</p><h3 id="实验结果"><a href="#实验结果" class="headerlink" title="实验结果"></a>实验结果</h3><img src="https://img.tanknee.cn/blogpicbed/2020/04/2020041272935f22805c6.png"/><h2 id="最近点对算法"><a href="#最近点对算法" class="headerlink" title="最近点对算法"></a>最近点对算法</h2><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>求出平面中所有点对里欧几里得距离最短的点对。</p><p>欧几里得距离：<br>$$<br>h = \sqrt{(x_1-x_2)^2+(y_1-y_2)^2}<br>$$</p><h3 id="源代码-1"><a href="#源代码-1" class="headerlink" title="源代码"></a>源代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * NearestDots 最近点对算法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NearestDots</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * generate random dots</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> num</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Dot&gt; <span class="title">generateDots</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">        List&lt;Dot&gt; dots = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++) &#123;</span><br><span class="line">            Dot dot = <span class="keyword">new</span> Dot(Math.random() * (num + <span class="number">2</span>), Math.random() * (num + <span class="number">5</span>));</span><br><span class="line">            dots.add(dot);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dots;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * get distance between tow dots</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dot1</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dot2</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getDistance</span><span class="params">(Dot dot1, Dot dot2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">double</span>) Math.sqrt(Math.pow(dot1.getX() - dot2.getX(), <span class="number">2.0</span>) + Math.pow(dot1.getY() - dot2.getY(), <span class="number">2.0</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * divide a dot list into a half length list as well as it's sorted bt dot.x</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dots</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> isLeft</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Dot&gt; <span class="title">getDividePart</span><span class="params">(List&lt;Dot&gt; dots, <span class="keyword">boolean</span> isLeft)</span> </span>&#123;</span><br><span class="line">        List&lt;Dot&gt; _return = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (isLeft) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; dots.size() / <span class="number">2</span>; i++) &#123;</span><br><span class="line">                _return.add(dots.get(i));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = dots.size() / <span class="number">2</span>; i &lt; dots.size(); i++) &#123;</span><br><span class="line">                _return.add(dots.get(i));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> _return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * get the min distance violently</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dots</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">violentResolver</span><span class="params">(List&lt;Dot&gt; dots)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">double</span> minDistance = Double.MAX_VALUE;</span><br><span class="line">        <span class="keyword">for</span> (Dot dot1 : dots) &#123;</span><br><span class="line">            <span class="keyword">for</span> (Dot dot2 : dots) &#123;</span><br><span class="line">                <span class="keyword">if</span> (dot1.equals(dot2)) &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">double</span> distance = getDistance(dot1, dot2);</span><br><span class="line">                <span class="keyword">if</span> (distance &lt; minDistance) &#123;</span><br><span class="line">                    minDistance = distance;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> minDistance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * get min distance by dividing</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dots</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">divideResolver</span><span class="params">(List&lt;Dot&gt; dots)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">double</span> minDistance = Double.MAX_VALUE;</span><br><span class="line">        <span class="keyword">int</span> midIndex = dots.size() / <span class="number">2</span>;</span><br><span class="line">        <span class="comment">// End condition of Recursion</span></span><br><span class="line">        <span class="keyword">if</span> (dots.size() == <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> getDistance(dots.get(<span class="number">0</span>), dots.get(<span class="number">1</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (dots.size() == <span class="number">3</span>) &#123;</span><br><span class="line">            <span class="keyword">double</span> d1 = getDistance(dots.get(<span class="number">0</span>), dots.get(<span class="number">1</span>));</span><br><span class="line">            <span class="keyword">double</span> d2 = getDistance(dots.get(<span class="number">0</span>), dots.get(<span class="number">2</span>));</span><br><span class="line">            <span class="keyword">double</span> d3 = getDistance(dots.get(<span class="number">1</span>), dots.get(<span class="number">2</span>));</span><br><span class="line">            <span class="keyword">return</span> Math.min(d1, Math.min(d2, d3));</span><br><span class="line">        &#125;</span><br><span class="line">        Collections.sort(dots, <span class="keyword">new</span> Comparator&lt;Dot&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(Dot d1, Dot d2)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (d1.getX() &lt; d2.getX()) &#123;</span><br><span class="line">                    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (d1.getX() &gt; d2.getX()) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        List&lt;Dot&gt; leftUnion = getDividePart(dots, <span class="keyword">true</span>);</span><br><span class="line">        List&lt;Dot&gt; rightUnion = getDividePart(dots, <span class="keyword">false</span>);</span><br><span class="line">        minDistance = Math.min(divideResolver(leftUnion), divideResolver(rightUnion));</span><br><span class="line">        Dot midDot = dots.get(midIndex);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = midIndex - <span class="number">4</span> &gt; <span class="number">0</span> ? midIndex - <span class="number">4</span> : <span class="number">0</span>; i &lt; (midIndex + <span class="number">3</span> &gt; dots.size() ? dots.size() : midIndex + <span class="number">3</span>)</span><br><span class="line">                &amp;&amp; i != midIndex; i++) &#123;</span><br><span class="line">            minDistance = Math.min(getDistance(midDot, dots.get(i)), minDistance);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> minDistance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        NearestDots nearestDots = <span class="keyword">new</span> NearestDots();</span><br><span class="line">        <span class="keyword">int</span> num = <span class="number">10</span>;</span><br><span class="line">        List&lt;Dot&gt; dots = nearestDots.generateDots(num);</span><br><span class="line">        <span class="keyword">double</span> min = nearestDots.violentResolver(dots);</span><br><span class="line">        <span class="keyword">double</span> min2 = nearestDots.divideResolver(dots);</span><br><span class="line">        System.out.println(min);</span><br><span class="line">        System.out.println(min2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 点的数据结构</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dot</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">double</span> x;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">double</span> y;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Dot</span><span class="params">(<span class="keyword">double</span> x, <span class="keyword">double</span> y)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.x = x;</span><br><span class="line">            <span class="keyword">this</span>.y = y;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getX</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> x;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setX</span><span class="params">(<span class="keyword">double</span> x)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.x = x;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getY</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> y;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setY</span><span class="params">(<span class="keyword">double</span> y)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.y = y;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实验分析-1"><a href="#实验分析-1" class="headerlink" title="实验分析"></a>实验分析</h3><p>该算法主要是使用了分治递归的思想，难点在于处理两段分划合并时的情况。</p><h4 id="合并的情况"><a href="#合并的情况" class="headerlink" title="合并的情况"></a>合并的情况</h4><p>此时左侧导出的点对是所有点对中距离最短的点对，右边的点对也是，接下来需要判断靠近分割线的两个点是也是最短的点对，如果是，那么这个点对就是该段合并后的点中最短距离的点对！</p><p>合并中还会出现极端情况，也就是有点在分界线上，所以我们应该人为规定在分界线上的点应该归属为左半边还是右半边。</p><img src="https://img.tanknee.cn/blogpicbed/2020/04/20200412b3109f523aa38.png/imgzip"/><p>而后我们可以根据上面这个图得出：在分界线$x=x_i$处，周围最多有七个点有可能比分治时的最小值要小，因此只需要在合并时比较这几个点之间的距离就可以了。</p><h3 id="实验结果-1"><a href="#实验结果-1" class="headerlink" title="实验结果"></a>实验结果</h3><img src="https://img.tanknee.cn/blogpicbed/2020/04/20200412820632390afac.png"/><h2 id="思考题"><a href="#思考题" class="headerlink" title="思考题"></a>思考题</h2><ol><li>分治法算法设计思想的三个基本步骤是什么？如何证明分治算法的正确性？ </li></ol><ul><li>问题划分</li><li>递归求解</li><li>合并子问题的解</li></ul><p>使用数学归纳法来证明算法的正确性</p><ol start="2"><li>利用主方式求解 <code>Strassen’s</code> 矩阵乘法和最近点对算法效率的递归分析结果。</li></ol><p><strong>Strassen’s算法</strong><br>$$<br>Strassen’s算法: T(n) = 7<em>T(\frac{n}{2}) + Θ(n^2)<br>$$<br>根据主方式得出$f(n) = Θ(n^{\log_2{7-3}})$所以其时间复杂度就是<br>$$<br>T(n) = \Theta(n^{\log_27})<br>$$<br>*</em>最近点对算法**<br>$$<br>T(n)=2*T(\frac{n}{2})+\Theta(n)<br>$$<br>根据主方式得出$f(n) = \Theta(n)$所以其时间复杂度就是<br>$$<br>T(n)=\Theta(n\log{n})<br>$$</p><ol start="3"><li>解释怎样修改 Strassen’s 矩阵乘法算法，使得它也可以用于大小不必为 2 的幂的矩阵？ </li></ol><p>对半分割矩阵，只要能求解最小单元矩阵就能实现</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Code" scheme="https://www.tanknee.cn/categories/Code/"/>
    
    
      <category term="length" scheme="https://www.tanknee.cn/tags/length/"/>
    
      <category term="算法" scheme="https://www.tanknee.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数据" scheme="https://www.tanknee.cn/tags/%E6%95%B0%E6%8D%AE/"/>
    
      <category term="int" scheme="https://www.tanknee.cn/tags/int/"/>
    
      <category term="this" scheme="https://www.tanknee.cn/tags/this/"/>
    
      <category term="return" scheme="https://www.tanknee.cn/tags/return/"/>
    
      <category term="trix" scheme="https://www.tanknee.cn/tags/trix/"/>
    
      <category term="matrix" scheme="https://www.tanknee.cn/tags/matrix/"/>
    
      <category term="dots" scheme="https://www.tanknee.cn/tags/dots/"/>
    
  </entry>
  
  <entry>
    <title>算法分析入门系列(一) 排序算法</title>
    <link href="https://www.tanknee.cn/2020/04/15/algorithmanalysis_1/"/>
    <id>https://www.tanknee.cn/2020/04/15/algorithmanalysis_1/</id>
    <published>2020-04-15T08:47:00.000Z</published>
    <updated>2020-06-01T14:59:44.616Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="排序算法"><a href="#排序算法" class="headerlink" title="排序算法"></a>排序算法</h2><h3 id="main函数代码"><a href="#main函数代码" class="headerlink" title="main函数代码"></a><code>main</code>函数代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> max = <span class="number">10</span>;</span><br><span class="line">    System.out.println(<span class="string">"插入排序-------------------------------------"</span>);</span><br><span class="line">    <span class="keyword">int</span>[] num = randomCreate(max);</span><br><span class="line">    printResult(num);</span><br><span class="line">    Long bt = System.nanoTime();</span><br><span class="line">    <span class="keyword">int</span>[] temp1 = insertSort(num);</span><br><span class="line">    Long et = System.nanoTime();</span><br><span class="line">    System.out.println(<span class="string">"排序用时："</span> + (et - bt + <span class="string">""</span>));</span><br><span class="line">    printResult(temp1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">"合并排序-------------------------------------"</span>);</span><br><span class="line">    <span class="keyword">int</span>[] temp4 = randomCreate(max);</span><br><span class="line">    printResult(temp4);</span><br><span class="line">    Long bt2 = System.nanoTime();</span><br><span class="line">    mergeSort(temp4);</span><br><span class="line">    Long et2 = System.nanoTime();</span><br><span class="line">    System.out.println(<span class="string">"排序用时："</span> + (et2 - bt2 + <span class="string">""</span>));</span><br><span class="line">    printResult(temp4);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">"快速排序-------------------------------------"</span>);</span><br><span class="line">    <span class="keyword">int</span>[] temp5 = randomCreate(max);</span><br><span class="line">    printResult(temp5);</span><br><span class="line">    Long bt3 = System.nanoTime();</span><br><span class="line">    quickSort(temp5, <span class="number">0</span>, temp5.length - <span class="number">1</span>, <span class="keyword">false</span>);</span><br><span class="line">    Long et3 = System.nanoTime();</span><br><span class="line">    System.out.println(<span class="string">"排序用时："</span> + (et3 - bt3 + <span class="string">""</span>));</span><br><span class="line">    printResult(temp5);</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">"随机化快速排序--------------------------------"</span>);</span><br><span class="line">    <span class="keyword">int</span>[] temp9 = randomCreate(max);</span><br><span class="line">    printResult(temp9);</span><br><span class="line">    Long bt7 = System.nanoTime();</span><br><span class="line">    quickSort(temp9, <span class="number">0</span>, temp9.length - <span class="number">1</span>, <span class="keyword">true</span>);</span><br><span class="line">    Long et7 = System.nanoTime();</span><br><span class="line">    System.out.println(<span class="string">"排序用时："</span> + (et2 - bt2 + <span class="string">""</span>));</span><br><span class="line">    printResult(temp9);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">"桶排序---------------------------------------"</span>);</span><br><span class="line">    <span class="keyword">int</span>[] temp6 = randomCreate(max);</span><br><span class="line">    printResult(temp6);</span><br><span class="line">    Long bt4 = System.nanoTime();</span><br><span class="line">    temp6 = bucketSort(temp6, max);</span><br><span class="line">    Long et4 = System.nanoTime();</span><br><span class="line">    System.out.println(<span class="string">"排序用时："</span> + (et4 - bt4 + <span class="string">""</span>));</span><br><span class="line">    printResult(temp6);</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">"计数排序-------------------------------------"</span>);</span><br><span class="line">    <span class="keyword">int</span>[] temp7 = randomCreate(max);</span><br><span class="line">    printResult(temp7);</span><br><span class="line">    Long bt5 = System.nanoTime();</span><br><span class="line">    temp7 = countSort(temp7);</span><br><span class="line">    Long et5 = System.nanoTime();</span><br><span class="line">    System.out.println(<span class="string">"排序用时："</span> + (et5 - bt5 + <span class="string">""</span>));</span><br><span class="line">    printResult(temp7);</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">"基数排序-------------------------------------"</span>);</span><br><span class="line">    <span class="keyword">int</span>[] temp8 = randomCreate(max);</span><br><span class="line">    printResult(temp8);</span><br><span class="line">    Long bt6 = System.nanoTime();</span><br><span class="line">    radixSort(temp8, (max + <span class="string">""</span>).length());</span><br><span class="line">    Long et6 = System.nanoTime();</span><br><span class="line">    System.out.println(<span class="string">"排序用时："</span> + (et6 - bt6 + <span class="string">""</span>));</span><br><span class="line">    printResult(temp8);</span><br><span class="line">    System.out.println(<span class="string">"---------------------------------------------"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="各个排序的源代码："><a href="#各个排序的源代码：" class="headerlink" title="各个排序的源代码："></a>各个排序的源代码：</h3><h4 id="插入排序："><a href="#插入排序：" class="headerlink" title="插入排序："></a>插入排序：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 插入排序</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> A</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] insertSort(<span class="keyword">int</span>[] A) &#123;</span><br><span class="line">    <span class="keyword">int</span> temp = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; A.length; i++) &#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 将当前的数存储起来用来在0-i+1的区间内进行排序</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        temp = A[i];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &gt; <span class="number">0</span>; j--) &#123;</span><br><span class="line">            <span class="keyword">if</span> (temp &lt; A[j - <span class="number">1</span>]) &#123;</span><br><span class="line">                A[j] = A[j - <span class="number">1</span>];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                A[j] = temp;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (j - <span class="number">1</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                A[<span class="number">0</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> A;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="合并排序："><a href="#合并排序：" class="headerlink" title="合并排序："></a>合并排序：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 合并排序</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> original</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">mergeSort</span><span class="params">(<span class="keyword">int</span>[] original)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (original == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NullPointerException(<span class="string">"The array can not be null !!!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> length = original.length;</span><br><span class="line">        <span class="keyword">if</span> (length &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> middle = length / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">int</span> partitionA[] = Arrays.copyOfRange(original, <span class="number">0</span>, middle);<span class="comment">// 拆分问题规模</span></span><br><span class="line">            <span class="keyword">int</span> partitionB[] = Arrays.copyOfRange(original, middle, length);</span><br><span class="line">            <span class="comment">// 递归调用</span></span><br><span class="line">            mergeSort(partitionA);</span><br><span class="line">            mergeSort(partitionB);</span><br><span class="line">            sort(partitionA, partitionB, original);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span>[] partitionA, <span class="keyword">int</span>[] partitionB, <span class="keyword">int</span>[] original)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i &lt; partitionA.length &amp;&amp; j &lt; partitionB.length) &#123;</span><br><span class="line">            <span class="keyword">if</span> (partitionA[i] &lt;= partitionB[j]) &#123;</span><br><span class="line">                original[k] = partitionA[i];</span><br><span class="line">                i++;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                original[k] = partitionB[j];</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            k++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (i == partitionA.length) &#123;</span><br><span class="line">            <span class="keyword">while</span> (k &lt; original.length) &#123;</span><br><span class="line">                original[k] = partitionB[j];</span><br><span class="line">                k++;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (j == partitionB.length) &#123;</span><br><span class="line">            <span class="keyword">while</span> (k &lt; original.length) &#123;</span><br><span class="line">                original[k] = partitionA[i];</span><br><span class="line">                k++;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="快速排序与随机快速排序："><a href="#快速排序与随机快速排序：" class="headerlink" title="快速排序与随机快速排序："></a>快速排序与随机快速排序：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 快速排序</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> arr 数组</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> low 最低位</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> high 最高位</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> random 是否随机化</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">quickSort</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> low, <span class="keyword">int</span> high, <span class="keyword">boolean</span> random)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i, j, temp, t;</span><br><span class="line">        <span class="keyword">if</span> (low &gt; high) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        i = low;</span><br><span class="line">        j = high;</span><br><span class="line">        <span class="comment">// 以第一位为分割中心</span></span><br><span class="line">        <span class="keyword">if</span> (!random) &#123;</span><br><span class="line">            temp = arr[low];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">int</span> index = (<span class="keyword">int</span>) Math.random() * high;</span><br><span class="line">            temp = arr[index];</span><br><span class="line">            arr[index] = arr[low];</span><br><span class="line">            arr[low] = temp;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (i &lt; j) &#123;</span><br><span class="line">            <span class="comment">//先看右边，依次往左递减</span></span><br><span class="line">            <span class="keyword">while</span> (temp &lt;= arr[j] &amp;&amp; i &lt; j) &#123;</span><br><span class="line">                j--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//再看左边，依次往右递增</span></span><br><span class="line">            <span class="keyword">while</span> (temp &gt;= arr[i] &amp;&amp; i &lt; j) &#123;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//如果满足条件则交换</span></span><br><span class="line">            <span class="keyword">if</span> (i &lt; j) &#123;</span><br><span class="line">                t = arr[j];</span><br><span class="line">                arr[j] = arr[i];</span><br><span class="line">                arr[i] = t;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//最后将基准为与i和j相等位置的数字交换</span></span><br><span class="line">        arr[low] = arr[i];</span><br><span class="line">        arr[i] = temp;</span><br><span class="line">        <span class="comment">//递归调用左半数组</span></span><br><span class="line">        quickSort(arr, low, j - <span class="number">1</span>, random);</span><br><span class="line">        <span class="comment">//递归调用右半数组</span></span><br><span class="line">        quickSort(arr, j + <span class="number">1</span>, high, random);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="桶排序："><a href="#桶排序：" class="headerlink" title="桶排序："></a>桶排序：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 桶排序</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> A</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] bucketSort(<span class="keyword">int</span>[] A, <span class="keyword">int</span> max) &#123;</span><br><span class="line">        <span class="keyword">int</span>[] B = <span class="keyword">new</span> <span class="keyword">int</span>[max + <span class="number">1</span>];<span class="comment">// 0-max 总共max+1个数</span></span><br><span class="line">        <span class="keyword">int</span>[] reArray = <span class="keyword">new</span> <span class="keyword">int</span>[A.length];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; A.length; i++) &#123;</span><br><span class="line">            B[A[i]]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; B.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= B[i]; j++) &#123;</span><br><span class="line">                <span class="comment">// i 是被排序的数的大小 B[i] 是大小为i的被排序数的个数</span></span><br><span class="line">                reArray[k] = i;</span><br><span class="line">                k++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> reArray;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="计数排序"><a href="#计数排序" class="headerlink" title="计数排序"></a>计数排序</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 计数排序</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> array</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] countSort(<span class="keyword">int</span>[] array) &#123;</span><br><span class="line">       <span class="comment">// 首先为所有元素申请足够大的空间</span></span><br><span class="line">       <span class="keyword">int</span> max = array[<span class="number">0</span>];</span><br><span class="line">       <span class="keyword">int</span> min = array[<span class="number">0</span>];</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">           <span class="keyword">if</span> (max &lt; array[i]) max = array[i];</span><br><span class="line">           <span class="keyword">if</span> (min &gt; array[i]) min = array[i];</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">int</span> maxLength = max - min + <span class="number">1</span>;</span><br><span class="line">       <span class="keyword">int</span>[] timesAndPosition = <span class="keyword">new</span> <span class="keyword">int</span>[maxLength];</span><br><span class="line">       <span class="keyword">int</span>[] finalArray = <span class="keyword">new</span> <span class="keyword">int</span>[array.length];</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">           timesAndPosition[array[i] - min] += <span class="number">1</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; maxLength; i++) &#123;</span><br><span class="line">           timesAndPosition[i] += timesAndPosition[i - <span class="number">1</span>];</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">           <span class="keyword">try</span> &#123;</span><br><span class="line">               <span class="keyword">int</span> tempIndex = array[i] - min;</span><br><span class="line">               finalArray[timesAndPosition[tempIndex] - <span class="number">1</span>] = array[i];</span><br><span class="line">               timesAndPosition[tempIndex]--;</span><br><span class="line">           &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">               e.printStackTrace();</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> finalArray;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h4 id="基数排序"><a href="#基数排序" class="headerlink" title="基数排序"></a>基数排序</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 基数排序</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array 待排序的数组</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> max   数组中最大数的位数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">radixSort</span><span class="params">(<span class="keyword">int</span>[] array, <span class="keyword">int</span> max)</span> </span>&#123;</span><br><span class="line">        List&lt;Integer&gt;[] temp = <span class="keyword">new</span> List[<span class="number">10</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; temp.length; i++) &#123;</span><br><span class="line">            temp[i] = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= max; k++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; temp.length; i++) &#123;</span><br><span class="line">                temp[i] = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">                temp[getFigure(array[i], k)].add(array[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; temp.length; i++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> t : temp[i]) &#123;</span><br><span class="line">                    array[j] = t;</span><br><span class="line">                    j++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取整型数的第k位的数字</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> num 数字</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> k   第k位</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getFigure</span><span class="params">(<span class="keyword">int</span> num, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 先除以10的k-1次方，将需要获取的那位数移动到最后一位上，然后和10取余数，得到该位数</span></span><br><span class="line">        <span class="keyword">return</span> (num / ((<span class="keyword">int</span>) Math.pow(<span class="number">10</span>, k - <span class="number">1</span>))) % <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="随机数生成函数与打印函数："><a href="#随机数生成函数与打印函数：" class="headerlink" title="随机数生成函数与打印函数："></a>随机数生成函数与打印函数：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 随机数生成函数</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> num</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] randomCreate(<span class="keyword">int</span> num) &#123;</span><br><span class="line">        <span class="keyword">int</span>[] array = <span class="keyword">new</span> <span class="keyword">int</span>[num];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++) &#123;</span><br><span class="line">            array[i] = (<span class="keyword">int</span>) (Math.random() * num);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> array;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 循环打印结果</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> arr</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printResult</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            System.out.print(arr[i]);</span><br><span class="line">            System.out.print(<span class="string">" "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="实验结果"><a href="#实验结果" class="headerlink" title="实验结果"></a>实验结果</h3><img src="https://img.tanknee.cn/blogpicbed/2020/04/20200412c3e0f0e773e2c.png"/><blockquote><p> 单位：ns</p></blockquote><h3 id="实验过程"><a href="#实验过程" class="headerlink" title="实验过程"></a>实验过程</h3><p>使用上文中的随机数生成函数生成1000个随机数字，然后再运行对应的排序算法，计时器使用的是Java原生的<code>System.nanoTime();</code></p><h2 id="思考题"><a href="#思考题" class="headerlink" title="思考题"></a>思考题</h2><ol><li>算法科学解决问题的一般模式是什么？ </li></ol><ul><li>用自然语言的方式描述问题</li><li>抽象问题的共性，分析问题的特性</li><li>选用或者创建合适的数据结构模型</li><li>编写算法</li></ul><ol start="2"><li>确定性算法和随机性算法的差异在那里？随机化对于算法效率的影响如何？ </li></ol><ul><li>确定性算法对于随机情况是不稳定的，而随机性算法对于一般的随机情况而言更加的适用。当遇上极端情况时确定性算法就有可能不再适用而随机算法的随机化过程能较大程度的减少极端情况的影响。</li><li>能够普遍地提高算法的效率。如在随机化快速排序中，通过基准节点的随机化选择，就能较好的避免<code>已经排好序/逆序</code>的情况下的低效率。</li></ul><ol start="3"><li>如何理解算法效率分析的渐近特征和相对性？ </li></ol><ul><li>因为算法每次面对的信息量都不相同，所以就不能用一个准确的值去描述算法的绝对效率，于是就应该选择相对的<code>N</code>，也就是每个元操作（此处是我给出的概念，也就是抽象认知下不可分割的最小操作节点），单次元操作记作1，所有元操作的和最大值就是该算法的上界。</li><li>同样的，因为数据量的不尽相同，所以最终的效率只能逼近靠近理论的算法效率，也就是渐近特征</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Code" scheme="https://www.tanknee.cn/categories/Code/"/>
    
    
      <category term="length" scheme="https://www.tanknee.cn/tags/length/"/>
    
      <category term="算法" scheme="https://www.tanknee.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="函数" scheme="https://www.tanknee.cn/tags/%E5%87%BD%E6%95%B0/"/>
    
      <category term="int" scheme="https://www.tanknee.cn/tags/int/"/>
    
      <category term="temp" scheme="https://www.tanknee.cn/tags/temp/"/>
    
      <category term="arr" scheme="https://www.tanknee.cn/tags/arr/"/>
    
      <category term="排序" scheme="https://www.tanknee.cn/tags/%E6%8E%92%E5%BA%8F/"/>
    
      <category term="noti" scheme="https://www.tanknee.cn/tags/noti/"/>
    
  </entry>
  
  <entry>
    <title>The Video Of WhuHan</title>
    <link href="https://www.tanknee.cn/2020/04/04/561/"/>
    <id>https://www.tanknee.cn/2020/04/04/561/</id>
    <published>2020-04-04T09:41:00.000Z</published>
    <updated>2020-06-01T14:59:44.615Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><iframe width="360" height="315" align="center" src="https://www.youtube-nocookie.com/embed/XU9FVqwO4TM" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Code" scheme="https://www.tanknee.cn/categories/Code/"/>
    
    
  </entry>
  
  <entry>
    <title>三月March</title>
    <link href="https://www.tanknee.cn/2020/04/03/560/"/>
    <id>https://www.tanknee.cn/2020/04/03/560/</id>
    <published>2020-04-03T10:34:25.000Z</published>
    <updated>2020-06-01T15:12:55.275Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>    <div id="aplayer-JRQqXvOt" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="494858498" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><blockquote><p>鬼知道我这个月经历了什么东西。</p></blockquote><p>每日高强度Coding，我都怀疑自己已经不太像个正常人了…</p><img src="https://img.tanknee.cn/blogpicbed/2020/04/20200401e3face62152d6.png" alt="真实高强度Coding"/><p>原来我也会有对着电脑感到生理性呕吐的时候..</p><p>昨天人机交互课上老师随口一句：<strong>高考都要延迟了，你们开学是别想了</strong></p><p>等疫情过了想出去好好看看…毕竟谁也不想永远呆在家里。</p><h2 id="一代宗师：宗师，一代（人）"><a href="#一代宗师：宗师，一代（人）" class="headerlink" title="一代宗师：宗师，一代（人）"></a>一代宗师：宗师，一代（人）</h2><p>前两天抽空看了一代宗师，说来惭愧，以前一直以为一代宗师是指的叶问四部曲的第一部，后来才明白是王家卫的电影。王家卫的电影看的很少，基本算是没有吧，最近的一次交集应该是知道了《<a href="https://movie.douban.com/subject/1292213/" target="_blank" rel="noopener">大话西游之大圣娶亲</a>》里那句流传甚广的<strong>爱你一万年</strong>是出自他的《<a href="https://movie.douban.com/subject/1291999/" target="_blank" rel="noopener">重庆森林</a>》。</p><p>一代宗师更像是一部小说，对白更多的辅助人物形象的刻画，以及时代特征的描述，而不是像更多的武侠电影那样去推动剧情的发展。</p><p><strong>一如其冷静，不占烟火气的格调。</strong></p><blockquote><p>如果人生有四季，四十岁前，我的人生都是春天。</p></blockquote><blockquote><p>做羹要讲究火候。火候不到，众口难调，火候过了，事情就焦。做人也是这样。</p></blockquote><blockquote><p>暗事好做，明事难成。</p></blockquote><blockquote><p>宝森不是想当英雄，是想造时势。现在这炉子里，需要这根新柴。</p></blockquote><blockquote><p>让他搭手多大的面子，姓叶的不识抬举，咱可不要坏了规矩。</p></blockquote><blockquote><p>别跟他们一般见识，老人死守着规矩，新人什么时候才能出头啊。叶问是个好材料，就看他这次能不能出头。<br>宫家没有败绩，您又在这儿，他凭什么出头。</p></blockquote><blockquote><p>你的脾气啊，就是爹年轻的时候。眼睛里只有胜负，没有人情世故。人要往远看，过了山，眼界就开阔了。但凡一个人见不得人好，见不得人高明，是没有容人之心。咱们宫家的门槛高，但是不出小人。</p></blockquote><blockquote><p>人活这一世，能耐还在其次。有的成了面子，有的成了里子，都是时势使然。这次让你下来，是想求个始终，让你看看，爹是怎么退下来的。你从小是看着我跟人交手长大的，这是最后一次。你是订了亲的人了，江湖的事，和你没关系。当个好大夫，平平安安的，就是尽孝心了。</p></blockquote><p><a href="https://note.tanknee.cn/wapp/pages/view/share/s/1oyM5w17Uh7G2emBkt3pWCWG3ywNqR3DGAsg2RaZqQ1J2QPK" target="_blank" rel="noopener">台词剪辑</a></p><p><img src="https://img.tanknee.cn/blogpicbed/2020/03/202003222594d66d57866.png/imgzip" alt="清河公园"></p><p>日丽风和，云销雨霁</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Caprice" scheme="https://www.tanknee.cn/categories/Caprice/"/>
    
    
      <category term="netease" scheme="https://www.tanknee.cn/tags/netease/"/>
    
      <category term="type" scheme="https://www.tanknee.cn/tags/type/"/>
    
      <category term="server" scheme="https://www.tanknee.cn/tags/server/"/>
    
      <category term="时候" scheme="https://www.tanknee.cn/tags/%E6%97%B6%E5%80%99/"/>
    
      <category term="o" scheme="https://www.tanknee.cn/tags/o/"/>
    
      <category term="疫情" scheme="https://www.tanknee.cn/tags/%E7%96%AB%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>快速提交git代码到多个托管平台</title>
    <link href="https://www.tanknee.cn/2020/03/26/559/"/>
    <id>https://www.tanknee.cn/2020/03/26/559/</id>
    <published>2020-03-26T07:37:00.000Z</published>
    <updated>2020-06-01T14:59:44.613Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>[button color=”success” icon=”” url=”<a href="https://git.tanknee.cn/explore/repos&quot;" target="_blank" rel="noopener">https://git.tanknee.cn/explore/repos&quot;</a> type=””]我的个人Git仓库[/button]<br>[button color=”black” icon=”” url=”<a href="https://github.com/TankNee&quot;" target="_blank" rel="noopener">https://github.com/TankNee&quot;</a> type=””]我的GitHub[/button]</p><blockquote><p>其实做法很简单，就是编写批处理程序。Linux下用bash，windows下用bat写，Linux我没有测试，但是应该没有什么问题。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m<span class="string">":tada: update my document"</span></span><br><span class="line">git push -u github master &amp;&amp; git push -u origin master</span><br></pre></td></tr></table></figure><p>其中第三行的<code>github</code>和<code>origin</code>是远程仓库的名字，相关的名字可以在<code>.git/config</code>文件中找到，只需要替换那两个名称就OK了，会自动提交对应的修改。</p><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><p>将这段文字保存到<code>push.bat</code>文件，Linux就保存到<code>push.sh</code>文件，然后打开终端，定位到该文件所在的目录，输入<code>./push</code>就会自动执行语句了。</p><blockquote><p>请把该脚本文件放在<code>.git</code>文件夹的同级目录</p></blockquote><img src="https://img.tanknee.cn/blogpicbed/2020/03/20200326275585967af02.png"/>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Code" scheme="https://www.tanknee.cn/categories/Code/"/>
    
    
      <category term="type" scheme="https://www.tanknee.cn/tags/type/"/>
    
      <category term="文件" scheme="https://www.tanknee.cn/tags/%E6%96%87%E4%BB%B6/"/>
    
      <category term="git" scheme="https://www.tanknee.cn/tags/git/"/>
    
      <category term="button" scheme="https://www.tanknee.cn/tags/button/"/>
    
      <category term="github" scheme="https://www.tanknee.cn/tags/github/"/>
    
      <category term="origin" scheme="https://www.tanknee.cn/tags/origin/"/>
    
  </entry>
  
  <entry>
    <title>WenZhou 202003</title>
    <link href="https://www.tanknee.cn/2020/03/22/558/"/>
    <id>https://www.tanknee.cn/2020/03/22/558/</id>
    <published>2020-03-22T11:29:00.000Z</published>
    <updated>2020-06-01T15:05:07.495Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><img src="https://img.tanknee.cn/blogpicbed/2020/03/20200322d1e3d55724f4c.png/imgzip" alt="20200322000003"><br><img src="https://img.tanknee.cn/blogpicbed/2020/03/20200322ead72262377ee.png/imgzip" alt="20200322000004"><br><img src="https://img.tanknee.cn/blogpicbed/2020/03/202003222594d66d57866.png/imgzip" alt="20200322000001"><br><img src="https://img.tanknee.cn/blogpicbed/2020/03/202003228ab02076b6f7e.png/imgzip" alt="20200322000002"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Album" scheme="https://www.tanknee.cn/categories/Album/"/>
    
    
      <category term="o" scheme="https://www.tanknee.cn/tags/o/"/>
    
  </entry>
  
  <entry>
    <title>如何制作一个简单的网络爬虫？nodejs实现</title>
    <link href="https://www.tanknee.cn/2020/03/15/spider/"/>
    <id>https://www.tanknee.cn/2020/03/15/spider/</id>
    <published>2020-03-15T07:31:00.000Z</published>
    <updated>2020-06-01T14:59:44.612Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>接下来有打算每半个月写一点东西，不然写东西的频率太低就会造成正反馈，产出越来越少了。</p><p>这段时间一共做了三个爬虫：</p><ul><li>爬取丁香园的疫情数据</li><li>爬取联想的虚拟货币乐豆</li><li>第三个跟第一个类似，不过工作量大一点</li></ul><p>一共用了两种不同的技术，前两个是自己的思路，用的是nodejs+express+superagent，实话实说，nodejs做后台确实对数据很友好，再用一下Sequelize做ORM对象映射，真的非常的方便。</p><p>做这个也是为了熟悉express的架构为以后填坑，虽然坑也不是特别多。</p><p>自己还给Sequelize文档做了一个镜像仓库，方便访问。<a href="https://git.tanknee.cn/tanknee/Sequelize-Docs-zh-CN" target="_blank" rel="noopener">文档</a></p><p>不过用JavaScript写程序有一点着实无法避免，那就是异步操作。</p><p>JavaScript作为浏览器的主要逻辑实现语言，少不了对网络操作的支持，如果浏览器不使用异步来获取数据的话就会有页面加载缓慢等问题，而在JavaScript写的后端中也是避免不了处理异步操作，<strong>比较头疼的就是循环异步操作</strong>，我查了网上很多的文档，主要的解决方案是循环递归嵌套promise，然后保证获取到最后一个promise对象，然后等待他的resolve或者reject。</p><p>来详细说说这几个工程吧。</p><h2 id="丁香园数据爬取"><a href="#丁香园数据爬取" class="headerlink" title="丁香园数据爬取"></a>丁香园数据爬取</h2><p>这个项目是我自发进行的，做了大概有三四天的样子吧。</p><p>分析页面数据</p><p>打开<a href="https://ncov.dxy.cn/ncovh5/view/pneumonia?scene=2&clicktime=1579582238&enterid=1579582238&from=timeline&isappinstalled=0" target="_blank" rel="noopener">丁香园</a>的网站，右键查看网页源码，可以看到丁香园的数据是后端渲染的，所有需要的数据都以json的形式嵌入到html的JavaScript中。</p><img src="https://img.tanknee.cn/blogpicbed/2020/03/202003155d1421c9ee328.png/imgzip"/><p>其实最开始的丁香园页面并不是这个样子的，最开始并没有那么直观，都是写在html标签页里。</p><blockquote><p>　我估计是为了方便各位网友爬取它的数据？毕竟写成html＋JavaScript的非常利于爬取</p></blockquote><p>而且里面的数据几乎都已经是完美严格的json格式，只需要使用<code>JSON.parse()</code>就好了。后台也没什么好说的，直接写一个定时器，定时爬取即可。<del>暴露一些接口就能在GitHub上收割</del>。</p><h2 id="联想虚拟货币爬取"><a href="#联想虚拟货币爬取" class="headerlink" title="联想虚拟货币爬取"></a>联想虚拟货币爬取</h2><p>这是酷安老哥找我做的一个项目，毕竟是人生中<strong>第一笔</strong>外包，我犹豫了两分钟马上就开始做了。第一天花了半天研究了页面，分析了重难点。</p><ul><li>每一个账号的货币数量是不同的，需要登陆账号</li><li>联想对单个IP有登录限制，如果单位时间内请求过多就会封锁IP一段时间</li><li>获取网页元素</li></ul><p>第一点是我在这部分中遇到的第一个坑。因为以前做的都是不用登陆的页面，只需要获取的HTML数据就可以直接分析了，所以上网查了一些资料。</p><p>其实要解决起来也很简单，就是模拟登陆操作，获取联想服务器返回的cookie数据，然后之后都带着这个cookie去访问货币查询的页面就好了。</p><blockquote><p>这里穿插一些我对网页安全性的思考：</p><p>网页是安全的吗？</p><p>不是，没有网页是安全的，纯粹的网页几乎不可能是完全安全的，所以很多的网银都需要插上一些硬件工具去确保安全性。</p><p>那么网页可以做到相对安全吗？</p><p>可以，也是应该的。</p><p>使用session或者cookie或是token来区别用户属性，避免未登录的未知用户查看敏感页面，并加上过期特性，保证数据的安全。</p><p>使用不可逆的加密方式对用户输入的密码加以保护，只有这样，后台在不需要知道用户真实密码的情况下确认用户的登录状态。我个人认为MD5加密是一种对我这个水平而言相对较好的用户信息加密方式。</p></blockquote><p>在分析联想的登录界面时，发现了一个让我哭笑不得的地方。</p><ul><li>联想的登录页面的密码是加密的</li><li>加密用的算法是base64，这个不是不可逆的加密算法</li></ul><blockquote><p><strong>百度百科</strong></p><p>Base64是网络上最常见的用于传输8Bit<a href="https://baike.baidu.com/item/字节码/9953683" target="_blank" rel="noopener">字节码</a>的编码方式之一，Base64就是一种基于64个可打印字符来表示<a href="https://baike.baidu.com/item/二进制/361457" target="_blank" rel="noopener">二进制</a>数据的方法。可查看RFC2045～RFC2049，上面有MIME的详细规范。</p><p>Base64编码是从二进制到字符的过程，可用于在<a href="https://baike.baidu.com/item/HTTP" target="_blank" rel="noopener">HTTP</a>环境下传递较长的标识信息。采用Base64编码具有不可读性，需要解码后才能阅读。</p></blockquote><p>甚至在联想的某些登录页面，密码是明文传输的…<strong>我对联想的技术水平是真的无语了</strong>，我就不说是哪几个页面了。</p><p>解决了登录这个问题之后就基本上搞定了一大半。</p><p>而后是运维和调优，其间遇到IP被封锁，我就设了爬取时间间隔，就基本上没出过问题了。</p><h2 id="信息获取的方式"><a href="#信息获取的方式" class="headerlink" title="信息获取的方式"></a>信息获取的方式</h2><p>现在网页主要是两种</p><ol><li>后端渲染的SSR页面，或者是prerender预渲染</li><li>单页面应用，前端请求数据前端渲染</li></ol><p>第二种对爬虫不友好，只能手动去找前端接口，然后看运气能能不能请求到对应的数据，比较随缘。</p><p>第一种的话我现在大多是用的正则表达式，JavaScript对正则还是比较友好的，操作dom也很方便，基本流程就是</p><ul><li>查看网页源码</li><li>找到需要数据</li><li>寻找唯一标识符</li><li>编写正则表达式</li><li>挑选数据并保存或者发送</li></ul><p>在使用正则表达式之前可以使用dom操作工具将需要搜索的范围缩小，便于匹配。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Code" scheme="https://www.tanknee.cn/categories/Code/"/>
    
    
      <category term="服务器" scheme="https://www.tanknee.cn/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="操作" scheme="https://www.tanknee.cn/tags/%E6%93%8D%E4%BD%9C/"/>
    
      <category term="网站" scheme="https://www.tanknee.cn/tags/%E7%BD%91%E7%AB%99/"/>
    
      <category term="对象" scheme="https://www.tanknee.cn/tags/%E5%AF%B9%E8%B1%A1/"/>
    
      <category term="疫情" scheme="https://www.tanknee.cn/tags/%E7%96%AB%E6%83%85/"/>
    
      <category term="字符" scheme="https://www.tanknee.cn/tags/%E5%AD%97%E7%AC%A6/"/>
    
      <category term="算法" scheme="https://www.tanknee.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数据" scheme="https://www.tanknee.cn/tags/%E6%95%B0%E6%8D%AE/"/>
    
      <category term="页面" scheme="https://www.tanknee.cn/tags/%E9%A1%B5%E9%9D%A2/"/>
    
      <category term="javascript" scheme="https://www.tanknee.cn/tags/javascript/"/>
    
      <category term="base64" scheme="https://www.tanknee.cn/tags/base64/"/>
    
      <category term="网页" scheme="https://www.tanknee.cn/tags/%E7%BD%91%E9%A1%B5/"/>
    
  </entry>
  
  <entry>
    <title>Shell脚本编程最简尝试</title>
    <link href="https://www.tanknee.cn/2020/03/09/556/"/>
    <id>https://www.tanknee.cn/2020/03/09/556/</id>
    <published>2020-03-09T08:19:00.000Z</published>
    <updated>2020-06-01T14:59:44.611Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="Shell"><a href="#Shell" class="headerlink" title="Shell"></a>Shell</h2><p>每一个shell脚本都需要一个注解，形如</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">! /bin/bash</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">n 其中n为数字，是外界输入到脚本里的参数</span></span><br><span class="line"><span class="meta">$</span><span class="bash">0 代表文件本身</span></span><br><span class="line"><span class="meta">$</span><span class="bash">1 是第一个参数</span></span><br></pre></td></tr></table></figure><p>读取外部文本内容并输出</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">while read line</span><br><span class="line">do</span><br><span class="line">    echo $line</span><br><span class="line">done &lt; $1</span><br></pre></td></tr></table></figure><p>其中<code>$1</code>是外部文件名，line是该文本里的每一行的内容。通过一个while循环输出文本内容。</p><p>本次作业：</p><img src="https://img.tanknee.cn/blogpicbed/2020/03/20200309cacf45e759a82.png"/><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Line Count</span></span><br><span class="line">lineCount=0 # 初始化行计数器</span><br><span class="line"></span><br><span class="line">while read line</span><br><span class="line">do</span><br><span class="line">    echo $line # 输出每一行的内容</span><br><span class="line">    lineCount=`expr $lineCount + 1` # 行计数器自增</span><br><span class="line">done &lt; $1</span><br><span class="line">echo $lineCount # 输出行数</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Code" scheme="https://www.tanknee.cn/categories/Code/"/>
    
    
      <category term="文件" scheme="https://www.tanknee.cn/tags/%E6%96%87%E4%BB%B6/"/>
    
      <category term="参数" scheme="https://www.tanknee.cn/tags/%E5%8F%82%E6%95%B0/"/>
    
      <category term="linecount" scheme="https://www.tanknee.cn/tags/linecount/"/>
    
      <category term="echo" scheme="https://www.tanknee.cn/tags/echo/"/>
    
      <category term="bin" scheme="https://www.tanknee.cn/tags/bin/"/>
    
      <category term="行计数器" scheme="https://www.tanknee.cn/tags/%E8%A1%8C%E8%AE%A1%E6%95%B0%E5%99%A8/"/>
    
      <category term="line" scheme="https://www.tanknee.cn/tags/line/"/>
    
  </entry>
  
  <entry>
    <title>二月February</title>
    <link href="https://www.tanknee.cn/2020/03/02/555/"/>
    <id>https://www.tanknee.cn/2020/03/02/555/</id>
    <published>2020-03-02T07:19:00.000Z</published>
    <updated>2020-06-02T03:32:45.221Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>    <div id="aplayer-IQkKDqVt" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="3932159" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><blockquote><p>闰年的二月也没有比普通年份的二月更加特别</p></blockquote><p>在家里的生活平淡的像一盆水，翻不出什么花样。每天早上起来：八点了，那就再睡半个钟头，才七点？那就玩会儿手机，然后跑到电脑前上神经兮兮的网课。</p><p>网课很好的证明了大学里上不上课基本上是<strong>没什么区别</strong>的，除非你真的在听课？<strong>你不会真的有听课吧？</strong></p><p>25号的时候村里终于开放了出去的权限，只有血统纯正的村里人，才能进出无阻，甚至还能在路边打到滴滴。</p><p>那天碰见的滴滴司机是个外省人，老婆孩子都回去了，疫情爆发，自己没来得及回家，导致现在一个人待在异乡，连吃了半个月的面，最后两天甚至连菜叶都没有，迫不得已去拿隔壁阿婆的菜。</p><p>无心评价对错。</p><blockquote><p>村里不给外村人发配菜，外村人家里弹尽粮绝，隔壁阿婆蔬菜满园。</p></blockquote><p>怎么个选法也不必多说吧。反正我家还有火锅吃。</p><p>前几天还看到站在KFC门口点外卖的段子，愣是让外卖小哥站着血赚配送费，没想到自己到了KFC门口时，也活成了段子…</p><p><strong>日子也没啥过头，天天歌舞升平，看片吃肉</strong></p><img src="https://img.tanknee.cn/blogpicbed/2020/03/2020030276ae2c9ca5514.png"/><p>这一个月看的电影，怕是比我前几年加起来看的都多。在家里把公立里<strong>祖传</strong>的投影仪架起来，投在家里那面潮的不行的破墙上，看着还挺舒服哈哈哈。</p><img src="https://img.tanknee.cn/blogpicbed/2020/03/2020030247e74e47f31b9.jpg" alt="你永远不知道墙上会出现什么东西"/><blockquote><p>恐怖直播</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Caprice" scheme="https://www.tanknee.cn/categories/Caprice/"/>
    
    
      <category term="生活" scheme="https://www.tanknee.cn/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="meting" scheme="https://www.tanknee.cn/tags/meting/"/>
    
      <category term="netease" scheme="https://www.tanknee.cn/tags/netease/"/>
    
      <category term="type" scheme="https://www.tanknee.cn/tags/type/"/>
    
      <category term="server" scheme="https://www.tanknee.cn/tags/server/"/>
    
      <category term="时候" scheme="https://www.tanknee.cn/tags/%E6%97%B6%E5%80%99/"/>
    
      <category term="疫情" scheme="https://www.tanknee.cn/tags/%E7%96%AB%E6%83%85/"/>
    
      <category term="网课" scheme="https://www.tanknee.cn/tags/%E7%BD%91%E8%AF%BE/"/>
    
      <category term="外村" scheme="https://www.tanknee.cn/tags/%E5%A4%96%E6%9D%91/"/>
    
      <category term="kfc" scheme="https://www.tanknee.cn/tags/kfc/"/>
    
      <category term="滴滴" scheme="https://www.tanknee.cn/tags/%E6%BB%B4%E6%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>一月January</title>
    <link href="https://www.tanknee.cn/2020/02/03/%E4%B8%80%E6%9C%88Jan/"/>
    <id>https://www.tanknee.cn/2020/02/03/%E4%B8%80%E6%9C%88Jan/</id>
    <published>2020-02-03T10:53:00.000Z</published>
    <updated>2020-06-01T14:59:44.611Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>[Meting]<br>[Music server=”netease” id=”208902” type=”song”/]<br>[/Meting]</p><blockquote><p>刚刚在翻以前写的博客时，突然想起来自己还没有写一月份的博客</p></blockquote><p>习惯性的想要给文章找一首歌，但因为这两天一直在家里，基本上就没怎么听歌，歌单里最新收藏的是蔡健雅的红色高跟鞋，没什么寓意，就是觉得熟悉，便收藏了。</p><p>三号早上考完了大物，自信满满地走出考场，结果到头来只有那么点分数，可能我是真的不配学物理，当然，汇编，数据结构，Java我大概也是都不配学的。</p><p>算了，好歹都过了，我就不强求了。</p><p>这个月随缘做项目，其实也不知道为了什么，可能就是为了开心吧，感觉这个寒假连游戏都没代码有意思，靠，这还是我吗，我震惊了。</p><p>根据一本electron的入门指导书做了一个简单的markdown编辑器，修修改改，甚至还想着用vue重写，但是应该是会懒得写了，也不一定是吧，说不定我开心我就写了呢？</p><blockquote><p>Neeto Markdown Editor</p></blockquote><img src="https://img.tanknee.cn/blogpicbed/2020/02/202002033efdd0d63160f.png"/><p>其实我写的还是挺漂亮的对吧…基本的功能我还是都做完了的呢。但是为什么没人给我⭐..//小声逼逼</p><p>刚做完markdown编辑器，冠状病毒就爆发了，前前后后去检查了好几次，被人用枪测了好几次体温，尽管如此，我还是不放心，花了两百大洋去乐清医院挂了号，拍了CT，最后当然是p事没有，有时候会肉疼自己的两百块钱，但一想到不测的话就会心慌好久，就没那么肉疼了。</p><p>之后又看到丁香园出的疫情地图，信息很全，正好手边也在看node js，就准备整一个疫情数据的接口，然后开放开源//收割⭐，走上人生巅峰（大雾）。</p><p>不过确实靠着这个项目拿到了目前为止最多的⭐（7个），每天早上爬起来看到⭐数目变多，api使用数增加就感到特别的满足，可能这就是<strong>程序员</strong>吧？</p><blockquote><p>WuHan-nCoV-2019-DataAPI</p></blockquote><img src="https://img.tanknee.cn/blogpicbed/2020/02/20200203c2dc608ffec63.png"/><p>手头还有两个在做的项目，我真的是精力充沛…希望不会秃的太早吧</p><p>武汉加油，温州加油，我想吃糯米饭（哭腔）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Caprice" scheme="https://www.tanknee.cn/categories/Caprice/"/>
    
    
      <category term="meting" scheme="https://www.tanknee.cn/tags/meting/"/>
    
      <category term="netease" scheme="https://www.tanknee.cn/tags/netease/"/>
    
      <category term="type" scheme="https://www.tanknee.cn/tags/type/"/>
    
      <category term="server" scheme="https://www.tanknee.cn/tags/server/"/>
    
      <category term="汇编" scheme="https://www.tanknee.cn/tags/%E6%B1%87%E7%BC%96/"/>
    
      <category term="Java" scheme="https://www.tanknee.cn/tags/Java/"/>
    
      <category term="electron" scheme="https://www.tanknee.cn/tags/electron/"/>
    
      <category term="markdown" scheme="https://www.tanknee.cn/tags/markdown/"/>
    
      <category term="node" scheme="https://www.tanknee.cn/tags/node/"/>
    
      <category term="疫情" scheme="https://www.tanknee.cn/tags/%E7%96%AB%E6%83%85/"/>
    
      <category term="逼逼" scheme="https://www.tanknee.cn/tags/%E9%80%BC%E9%80%BC/"/>
    
  </entry>
  
  <entry>
    <title>WuHan-nCoV-2019疫情数据接口</title>
    <link href="https://www.tanknee.cn/2020/01/29/ncov/"/>
    <id>https://www.tanknee.cn/2020/01/29/ncov/</id>
    <published>2020-01-29T13:01:00.000Z</published>
    <updated>2020-06-01T14:59:44.610Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="nCov-DataCollect"><a href="#nCov-DataCollect" class="headerlink" title="nCov-DataCollect"></a>nCov-DataCollect</h1><blockquote><p>本接口又复活辣，3.2更新，请移步GitHub [button color=”info” icon=”” url=”<a href="https://github.com/TankNee/nCoV-2019-DataAPI&quot;" target="_blank" rel="noopener">https://github.com/TankNee/nCoV-2019-DataAPI&quot;</a> type=””]Github地址[/button]</p></blockquote><blockquote><p>数据来自<a href="http://t.cn/A6vBv3yL" target="_blank" rel="noopener">丁香园</a></p></blockquote><p>[scode type=”red”]武汉加油，温州加油[/scode]</p><p>本项目基于nodejs-express框架构建，使用正则表达式爬取页面信息</p><h2 id="数据可视化查看地址"><a href="#数据可视化查看地址" class="headerlink" title="数据可视化查看地址"></a>数据可视化查看地址</h2><p><a href="http://ncov.tanknee.cn/admin" target="_blank" rel="noopener">管理后台</a></p><blockquote><p>登录用户名 ： <code>demo</code></p><p>登录密码：<code>demo</code></p><p>模板来源：<a href="https://github.com/lin-xin/vue-manage-system" target="_blank" rel="noopener">lin-xin</a></p></blockquote><img src="https://img.tanknee.cn/blogpicbed/2020/01/20200129bfa81ed0c5c5c.png"/><img src="https://img.tanknee.cn/blogpicbed/2020/01/202001292c6a1345064f1.png"/><img src="https://img.tanknee.cn/blogpicbed/2020/01/202001294869760b6e94b.png"/><h2 id="api接口地址"><a href="#api接口地址" class="headerlink" title="api接口地址"></a>api接口地址</h2><h4 id="基础URL："><a href="#基础URL：" class="headerlink" title="基础URL："></a>基础URL：</h4><blockquote><p><a href="http://ncov.tanknee.cn/api/" target="_blank" rel="noopener">http://ncov.tanknee.cn/api/</a></p></blockquote><h3 id="获取后台数据库中的最新数据："><a href="#获取后台数据库中的最新数据：" class="headerlink" title="获取后台数据库中的最新数据："></a>获取后台数据库中的最新数据：</h3><blockquote><p><a href="http://ncov.tanknee.cn/api/" target="_blank" rel="noopener">http://ncov.tanknee.cn/api/</a></p></blockquote><h4 id="请求方法："><a href="#请求方法：" class="headerlink" title="请求方法："></a>请求方法：</h4><p> <code>GET</code></p><h4 id="返回实例"><a href="#返回实例" class="headerlink" title="返回实例:"></a>返回实例:</h4><blockquote><p>只截取了部分数据</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">"sumInfo": &#123;</span><br><span class="line">        "id": 1559,</span><br><span class="line">        "confirmedCount": 7830,</span><br><span class="line">        "curedCount": 135,</span><br><span class="line">        "deadCount": 170,</span><br><span class="line">        "suspectedCount": 12139,</span><br><span class="line">        "addtime": 1580387755098</span><br><span class="line">    &#125;,</span><br><span class="line">    "provinceInfo": [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"id"</span>: <span class="number">19270</span>,</span><br><span class="line">            <span class="attr">"provinceName"</span>: <span class="string">"湖北省"</span>,</span><br><span class="line">            <span class="attr">"provinceShortName"</span>: <span class="string">"湖北"</span>,</span><br><span class="line">            <span class="attr">"confirmedCount"</span>: <span class="number">4586</span>,</span><br><span class="line">            <span class="attr">"suspectedCount"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"curedCount"</span>: <span class="number">90</span>,</span><br><span class="line">            <span class="attr">"deadCount"</span>: <span class="number">162</span>,</span><br><span class="line">            <span class="attr">"addtime"</span>: <span class="number">1580387755098</span>,</span><br><span class="line">            <span class="attr">"cities"</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">"id"</span>: <span class="number">176949</span>,</span><br><span class="line">                    <span class="attr">"cityName"</span>: <span class="string">"武汉"</span>,</span><br><span class="line">                    <span class="attr">"provinceShortName"</span>: <span class="string">"湖北"</span>,</span><br><span class="line">                    <span class="attr">"confirmedCount"</span>: <span class="number">2261</span>,</span><br><span class="line">                    <span class="attr">"suspectedCount"</span>: <span class="number">0</span>,</span><br><span class="line">                    <span class="attr">"curedCount"</span>: <span class="number">54</span>,</span><br><span class="line">                    <span class="attr">"deadCount"</span>: <span class="number">129</span>,</span><br><span class="line">                    <span class="attr">"addtime"</span>: <span class="number">1580387755098</span></span><br><span class="line">                &#125;,....</span><br></pre></td></tr></table></figure><h4 id="返回实例参数："><a href="#返回实例参数：" class="headerlink" title="返回实例参数："></a>返回实例参数：</h4><table><thead><tr><th>参数名称</th><th>参数类型</th><th>备注</th></tr></thead><tbody><tr><td>provinceName</td><td>String</td><td>省份全名</td></tr><tr><td>provinceShortName</td><td>String</td><td>省份短名</td></tr><tr><td>cityName</td><td>String</td><td>城市名称</td></tr><tr><td>confirmedCount</td><td>number</td><td>确诊人数</td></tr><tr><td>suspectedCount</td><td>number</td><td>疑似人数</td></tr><tr><td>curedCount</td><td>number</td><td>治愈人数</td></tr><tr><td>deadCount</td><td>number</td><td>死亡人数</td></tr><tr><td>addtime</td><td>number</td><td>爬取时间</td></tr></tbody></table><h3 id="获取实时数据："><a href="#获取实时数据：" class="headerlink" title="获取实时数据："></a>获取实时数据：</h3><blockquote><p><a href="http://ncov.tanknee.cn/api/realtime" target="_blank" rel="noopener">http://ncov.tanknee.cn/api/realtime</a></p></blockquote><h4 id="请求方法：-1"><a href="#请求方法：-1" class="headerlink" title="请求方法："></a>请求方法：</h4><p> <code>GET</code></p><h3 id="获取疫情总和数据的全部历史数据："><a href="#获取疫情总和数据的全部历史数据：" class="headerlink" title="获取疫情总和数据的全部历史数据："></a>获取疫情总和数据的全部历史数据：</h3><blockquote><p><a href="http://ncov.tanknee.cn/api/sum" target="_blank" rel="noopener">http://ncov.tanknee.cn/api/sum</a></p></blockquote><h4 id="请求方法：-2"><a href="#请求方法：-2" class="headerlink" title="请求方法："></a>请求方法：</h4><p><code>GET</code></p><h3 id="获取单一省份的最新数据："><a href="#获取单一省份的最新数据：" class="headerlink" title="获取单一省份的最新数据："></a>获取单一省份的最新数据：</h3><blockquote><p><a href="http://ncov.tanknee.cn/api/province" target="_blank" rel="noopener">http://ncov.tanknee.cn/api/province</a></p></blockquote><h4 id="请求参数："><a href="#请求参数：" class="headerlink" title="请求参数："></a>请求参数：</h4><table><thead><tr><th>参数名称</th><th>参数类型</th><th>备注</th></tr></thead><tbody><tr><td>province</td><td>String</td><td>省份名称</td></tr><tr><td>all</td><td>String</td><td>是否获取全部历史消息，默认为false</td></tr></tbody></table><h4 id="请求方法：-3"><a href="#请求方法：-3" class="headerlink" title="请求方法："></a>请求方法：</h4><p> <code>POST</code></p><h4 id="返回实例："><a href="#返回实例：" class="headerlink" title="返回实例："></a>返回实例：</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"provinceInfo"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"id"</span>: <span class="number">5944</span>,</span><br><span class="line">            <span class="attr">"provinceName"</span>: <span class="string">"浙江省"</span>,</span><br><span class="line">            <span class="attr">"provinceShortName"</span>: <span class="string">"浙江"</span>,</span><br><span class="line">            <span class="attr">"confirmedCount"</span>: <span class="number">173</span>,</span><br><span class="line">            <span class="attr">"suspectedCount"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"curedCount"</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">"deadCount"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"addtime"</span>: <span class="number">1580224800003</span></span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"citiesOfProvince"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"id"</span>: <span class="number">47028</span>,</span><br><span class="line">            <span class="attr">"cityName"</span>: <span class="string">"温州"</span>,</span><br><span class="line">            <span class="attr">"provinceShortName"</span>: <span class="string">"浙江"</span>,</span><br><span class="line">            <span class="attr">"confirmedCount"</span>: <span class="number">60</span>,</span><br><span class="line">            <span class="attr">"suspectedCount"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"curedCount"</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">"deadCount"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"addtime"</span>: <span class="number">1580224800003</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"id"</span>: <span class="number">47029</span>,</span><br><span class="line">            <span class="attr">"cityName"</span>: <span class="string">"杭州"</span>,</span><br><span class="line">            <span class="attr">"provinceShortName"</span>: <span class="string">"浙江"</span>,</span><br><span class="line">            <span class="attr">"confirmedCount"</span>: <span class="number">32</span>,</span><br><span class="line">            <span class="attr">"suspectedCount"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"curedCount"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"deadCount"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"addtime"</span>: <span class="number">1580224800003</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"id"</span>: <span class="number">47030</span>,</span><br><span class="line">            <span class="attr">"cityName"</span>: <span class="string">"台州"</span>,</span><br><span class="line">            <span class="attr">"provinceShortName"</span>: <span class="string">"浙江"</span>,</span><br><span class="line">            <span class="attr">"confirmedCount"</span>: <span class="number">22</span>,</span><br><span class="line">            <span class="attr">"suspectedCount"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"curedCount"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"deadCount"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"addtime"</span>: <span class="number">1580224800003</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"id"</span>: <span class="number">47031</span>,</span><br><span class="line">            <span class="attr">"cityName"</span>: <span class="string">"宁波"</span>,</span><br><span class="line">            <span class="attr">"provinceShortName"</span>: <span class="string">"浙江"</span>,</span><br><span class="line">            <span class="attr">"confirmedCount"</span>: <span class="number">17</span>,</span><br><span class="line">            <span class="attr">"suspectedCount"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"curedCount"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"deadCount"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"addtime"</span>: <span class="number">1580224800003</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"id"</span>: <span class="number">47032</span>,</span><br><span class="line">            <span class="attr">"cityName"</span>: <span class="string">"嘉兴"</span>,</span><br><span class="line">            <span class="attr">"provinceShortName"</span>: <span class="string">"浙江"</span>,</span><br><span class="line">            <span class="attr">"confirmedCount"</span>: <span class="number">11</span>,</span><br><span class="line">            <span class="attr">"suspectedCount"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"curedCount"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"deadCount"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"addtime"</span>: <span class="number">1580224800003</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"id"</span>: <span class="number">47033</span>,</span><br><span class="line">            <span class="attr">"cityName"</span>: <span class="string">"绍兴"</span>,</span><br><span class="line">            <span class="attr">"provinceShortName"</span>: <span class="string">"浙江"</span>,</span><br><span class="line">            <span class="attr">"confirmedCount"</span>: <span class="number">7</span>,</span><br><span class="line">            <span class="attr">"suspectedCount"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"curedCount"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"deadCount"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"addtime"</span>: <span class="number">1580224800003</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"id"</span>: <span class="number">47034</span>,</span><br><span class="line">            <span class="attr">"cityName"</span>: <span class="string">"金华"</span>,</span><br><span class="line">            <span class="attr">"provinceShortName"</span>: <span class="string">"浙江"</span>,</span><br><span class="line">            <span class="attr">"confirmedCount"</span>: <span class="number">7</span>,</span><br><span class="line">            <span class="attr">"suspectedCount"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"curedCount"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"deadCount"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"addtime"</span>: <span class="number">1580224800003</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"id"</span>: <span class="number">47035</span>,</span><br><span class="line">            <span class="attr">"cityName"</span>: <span class="string">"衢州"</span>,</span><br><span class="line">            <span class="attr">"provinceShortName"</span>: <span class="string">"浙江"</span>,</span><br><span class="line">            <span class="attr">"confirmedCount"</span>: <span class="number">5</span>,</span><br><span class="line">            <span class="attr">"suspectedCount"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"curedCount"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"deadCount"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"addtime"</span>: <span class="number">1580224800003</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"id"</span>: <span class="number">47036</span>,</span><br><span class="line">            <span class="attr">"cityName"</span>: <span class="string">"丽水"</span>,</span><br><span class="line">            <span class="attr">"provinceShortName"</span>: <span class="string">"浙江"</span>,</span><br><span class="line">            <span class="attr">"confirmedCount"</span>: <span class="number">5</span>,</span><br><span class="line">            <span class="attr">"suspectedCount"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"curedCount"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"deadCount"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"addtime"</span>: <span class="number">1580224800003</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"id"</span>: <span class="number">47037</span>,</span><br><span class="line">            <span class="attr">"cityName"</span>: <span class="string">"舟山"</span>,</span><br><span class="line">            <span class="attr">"provinceShortName"</span>: <span class="string">"浙江"</span>,</span><br><span class="line">            <span class="attr">"confirmedCount"</span>: <span class="number">4</span>,</span><br><span class="line">            <span class="attr">"suspectedCount"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"curedCount"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"deadCount"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"addtime"</span>: <span class="number">1580224800003</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"id"</span>: <span class="number">47038</span>,</span><br><span class="line">            <span class="attr">"cityName"</span>: <span class="string">"湖州"</span>,</span><br><span class="line">            <span class="attr">"provinceShortName"</span>: <span class="string">"浙江"</span>,</span><br><span class="line">            <span class="attr">"confirmedCount"</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">"suspectedCount"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"curedCount"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"deadCount"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"addtime"</span>: <span class="number">1580224800003</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="返回实例参数：-1"><a href="#返回实例参数：-1" class="headerlink" title="返回实例参数："></a>返回实例参数：</h4><table><thead><tr><th>参数名称</th><th>参数类型</th><th>备注</th></tr></thead><tbody><tr><td>provinceName</td><td>String</td><td>省份全名</td></tr><tr><td>provinceShortName</td><td>String</td><td>省份短名</td></tr><tr><td>cityName</td><td>String</td><td>城市名称</td></tr><tr><td>confirmedCount</td><td>number</td><td>确诊人数</td></tr><tr><td>suspectedCount</td><td>number</td><td>疑似人数</td></tr><tr><td>curedCount</td><td>number</td><td>治愈人数</td></tr><tr><td>deadCount</td><td>number</td><td>死亡人数</td></tr><tr><td>addtime</td><td>number</td><td>爬取时间</td></tr></tbody></table><h3 id="获取单一城市的全部信息："><a href="#获取单一城市的全部信息：" class="headerlink" title="获取单一城市的全部信息："></a>获取单一城市的全部信息：</h3><blockquote><p><a href="http://ncov.tanknee.cn/api/city" target="_blank" rel="noopener">http://ncov.tanknee.cn/api/city</a></p></blockquote><h4 id="请求参数：-1"><a href="#请求参数：-1" class="headerlink" title="请求参数："></a>请求参数：</h4><table><thead><tr><th>参数名称</th><th>参数类型</th><th>备注</th></tr></thead><tbody><tr><td>cityname</td><td>String</td><td>城市名称</td></tr><tr><td>all</td><td>String</td><td>是否获取全部历史消息，默认为false</td></tr></tbody></table><h4 id="请求方法：-4"><a href="#请求方法：-4" class="headerlink" title="请求方法："></a>请求方法：</h4><p> <code>POST</code></p><h4 id="返回实例：-1"><a href="#返回实例：-1" class="headerlink" title="返回实例："></a>返回实例：</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">46994</span>,</span><br><span class="line">        <span class="attr">"cityName"</span>: <span class="string">"武汉"</span>,</span><br><span class="line">        <span class="attr">"provinceShortName"</span>: <span class="string">"湖北"</span>,</span><br><span class="line">        <span class="attr">"confirmedCount"</span>: <span class="number">1590</span>,</span><br><span class="line">        <span class="attr">"suspectedCount"</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">"curedCount"</span>: <span class="number">47</span>,</span><br><span class="line">        <span class="attr">"deadCount"</span>: <span class="number">85</span>,</span><br><span class="line">        <span class="attr">"addtime"</span>: <span class="number">1580224800003</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h4 id="返回实例参数：-2"><a href="#返回实例参数：-2" class="headerlink" title="返回实例参数："></a>返回实例参数：</h4><table><thead><tr><th>参数名称</th><th>参数类型</th><th>备注</th></tr></thead><tbody><tr><td>provinceShortName</td><td>String</td><td>省份短名</td></tr><tr><td>cityName</td><td>String</td><td>城市名称</td></tr><tr><td>confirmedCount</td><td>number</td><td>确诊人数</td></tr><tr><td>suspectedCount</td><td>number</td><td>疑似人数</td></tr><tr><td>curedCount</td><td>number</td><td>治愈人数</td></tr><tr><td>deadCount</td><td>number</td><td>死亡人数</td></tr><tr><td>addtime</td><td>number</td><td>爬取时间</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Code" scheme="https://www.tanknee.cn/categories/Code/"/>
    
    
      <category term="地址" scheme="https://www.tanknee.cn/tags/%E5%9C%B0%E5%9D%80/"/>
    
      <category term="类型" scheme="https://www.tanknee.cn/tags/%E7%B1%BB%E5%9E%8B/"/>
    
      <category term="参数" scheme="https://www.tanknee.cn/tags/%E5%8F%82%E6%95%B0/"/>
    
      <category term="数据库" scheme="https://www.tanknee.cn/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="addtime" scheme="https://www.tanknee.cn/tags/addtime/"/>
    
      <category term="curedcount" scheme="https://www.tanknee.cn/tags/curedcount/"/>
    
      <category term="deadcount" scheme="https://www.tanknee.cn/tags/deadcount/"/>
    
      <category term="cityname" scheme="https://www.tanknee.cn/tags/cityname/"/>
    
  </entry>
  
  <entry>
    <title>Neeto - 我所期待的MD编辑器</title>
    <link href="https://www.tanknee.cn/2020/01/21/neetoad/"/>
    <id>https://www.tanknee.cn/2020/01/21/neetoad/</id>
    <published>2020-01-21T13:16:27.000Z</published>
    <updated>2020-06-01T14:59:44.609Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>或许，这个简陋的项目更应该被称为<code>Electron &amp;&amp; JavaScript</code> 的<strong>最佳实践</strong>！</p></blockquote><h2 id="Neeto的起源"><a href="#Neeto的起源" class="headerlink" title="Neeto的起源"></a>Neeto的起源</h2><p>最初这个项目是基于Steve Kinney的 <strong>《Electron跨平台开发实战》</strong> 一书第三章的Fire Sale项目。这本书写的挺好，通俗易懂，并且比较有借鉴价值。本来的计划是抛开那本书重新构建Neeto的架构，但有些代码我也不想做重复工作，所以就没有另开一个工程。</p><h2 id="Neeto的背景"><a href="#Neeto的背景" class="headerlink" title="Neeto的背景"></a>Neeto的背景</h2><p>这个项目用了很多node仓库里的第三方模块，没有这些模块我也很难在十天左右的开发工期里完成Neeto的编写。比较核心的有下面这几个：</p><ul><li><code>&quot;jquery&quot;: &quot;^3.4.1&quot;</code></li><li><code>&quot;mdui&quot;: &quot;^0.4.3&quot;</code>一个Google MD设计规范的UI库</li><li><code>&quot;showdown&quot;: &quot;^1.9.1&quot;</code> Neeto使用的markdown语法解析器</li><li><code>&quot;showdown-highlight&quot;: &quot;^2.1.3&quot;</code> showdown的代码语法解析插件</li><li><code>&quot;showdown-katex&quot;: &quot;^0.6.0&quot;</code>showdown的LaTeX语法解析插件</li><li><code>&quot;simplemde&quot;: &quot;^1.11.2&quot;</code> 替代原本的textarea组件，实现更加丰富的操作</li></ul><p>不过我在写Neeto时基本没有用到当下流行的第三方库：<code>Vue or React or Angular</code>，因为我想要在下个版本中用Vue重写Neeto，有很多方面都有改进的空间。并且因为我是基本上用的纯<code>JavaScript</code>写的，所以好多地方都十分的原始而简陋。我执意用原生js写的另一个目的就是尽可能熟悉js的一些用法，包括回调，异步，非阻塞性等等。</p><h2 id="Neeto的设计思路"><a href="#Neeto的设计思路" class="headerlink" title="Neeto的设计思路"></a>Neeto的设计思路</h2><p>说到思路，不得提我最喜欢的Markdown编辑器-<code>Typora</code> 毫无疑问，我相信<code>Typora</code>一定是Windows与MacOs上最优秀的编辑器，简洁，功能丰富，设计优雅。我的数据结构复习与汇编复习都是用<code>Typora</code>完成的，它是如此的完美以至于让我都快忘记了它的一些瑕疵。</p><img src="https://pic.tanknee.cn/blogpicbed/2020/01/20200121fafdbc463733c.png"><p>它所见即所得（WYSIWYG）的实现效果让我理所当然的觉得，一款编辑器不就应该这样吗。当你写下你的灵感，编辑器将你的灵感完整无误地渲染成你所想的样子。</p><p>因此我在改写之时，就准备将<code>Typora</code>作为Neeto最好的榜样，并且我希望能比<code>Typora</code>做的更好！</p><p>所以说，这个项目更像是补全，弥补我在<code>Typora</code>中未能得到的遗憾：</p><ul><li>自定义图片上传的图床√</li><li>云笔记功能-未实现</li><li>一次写作，多个写作平台（知乎，微信，CSDN等）完整实现效果√</li><li>Web网页管理云笔记-未实现</li><li>小程序查看云笔记-未实现</li></ul><p>可以比较清晰的看到，我所想要实现的几个需求基本上都与网络相关，而<code>Typora</code>给自己的定位就仅仅是<br><img src="https://pic.tanknee.cn/blogpicbed/2020/01/2020012118cd17564fd0a.png"></p><p><code>Readable &amp; Writable</code> 读写是<code>Typora</code>的核心功能，可以预见，作者并不准备为<code>Typora</code>提供与网络相关的功能，在win与mac两个平台上，也仅仅只有mac可以用一个插件来上传本地图片。</p><blockquote><p>Neeto的后期计划表里也有打算实现插件系统，不过应该会是很后面</p></blockquote><p>我在这个版本<code>Version_1.0.8</code>中，使用json文件来存储图床的配置信息，这只是实验性的尝试，并不保证长期有效性</p><img src="https://pic.tanknee.cn/blogpicbed/2020/01/20200121de7ec9af61ac3.png"><p>后续我会支持更多的图床，如阿里云OSS，腾讯云COS，七牛云CDN等等。</p><blockquote><p><strong>什么是图床:</strong></br><br>图床是网络图片的一种存储方式，Web页面通过一条URL来获取图片。用户将图片上传到图床之后，图床服务器返回一条JSON消息，其中包含上传图片的网络URL，使用图床给定的图片链接就可以在多个地方调用图片，而不会出现本地图片无法直接使用的尴尬场面。</p></blockquote><h2 id="一些简单的小功能的实现"><a href="#一些简单的小功能的实现" class="headerlink" title="一些简单的小功能的实现"></a>一些简单的小功能的实现</h2><h3 id="一键复制到微信公众号平台"><a href="#一键复制到微信公众号平台" class="headerlink" title="一键复制到微信公众号平台"></a>一键复制到微信公众号平台</h3><p>点击Neeto头部的菜单栏，可以看到文件菜单选项。</p><img src="https://pic.tanknee.cn/blogpicbed/2020/01/2020012123c54dc8bed04.png"><p>点击之后会出现复制成功的提示</p><img src="https://pic.tanknee.cn/blogpicbed/2020/01/20200121c297065f7218d.png"><p>然后直接前往微信公众号后台粘贴就可以实现带格式粘贴。</p><img src="https://pic.tanknee.cn/blogpicbed/2020/01/20200121fcc41916a6643.png"><p>使用时需要注意的几个地方：</p><ul><li>复制时使用的图片应为网络图片，如果使用本地图片会出现上传失败的问题？</li><li>尽量使用体积小的图片。</li></ul><blockquote><p><strong>图片上传技巧</strong></br><br>可以将图片直接拖入左侧的文本编辑区域，也可以用QQ，Wechat等软件的截图工具截图后，直接在文本编辑区内粘贴，粘贴成功后顶部会出现LightTip提示上传成功。</p></blockquote><h3 id="图片拖入后上传"><a href="#图片拖入后上传" class="headerlink" title="图片拖入后上传"></a>图片拖入后上传</h3><p>这个功能是基于原书上拖入事件更改的，但我觉得是一个很有意思的部分，可以通过这一部分理解JS的处理哲学。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 监听drop事件--JavaScript是事件驱动的</span></span><br><span class="line">smde.codemirror.on(<span class="string">"drop"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">editor, e</span>) </span>&#123;</span><br><span class="line"><span class="comment">//获取文件对象</span></span><br><span class="line">    <span class="keyword">const</span> file = getDroppedFile(e)</span><br><span class="line">    <span class="comment">//获取dataTransfer对象</span></span><br><span class="line">    <span class="keyword">var</span> df = e.dataTransfer</span><br><span class="line"><span class="comment">//处理文件</span></span><br><span class="line">    dealWithFile(file, df)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> dealWithFile = <span class="function">(<span class="params">file, df</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 文件对象数组</span></span><br><span class="line">    <span class="keyword">var</span> dropFiles = []</span><br><span class="line">    <span class="built_in">console</span>.log(file)</span><br><span class="line">    <span class="keyword">if</span> (fileTypeIsSupported(file)) &#123;</span><br><span class="line"><span class="comment">// 如果这个文件是图片类型的，就去处理这个文件对象</span></span><br><span class="line">        <span class="keyword">if</span> (file.type.indexOf(<span class="string">"image"</span>) !== <span class="number">-1</span>) &#123;</span><br><span class="line">            <span class="comment">// 获取图片的File对象</span></span><br><span class="line">            <span class="keyword">if</span> (df.items !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">                <span class="comment">// Chrome有items属性，对Chrome的单独处理</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; df.items.length; i++) &#123;</span><br><span class="line">                    <span class="keyword">var</span> item = df.items[i];</span><br><span class="line">                    <span class="built_in">console</span>.log(item.getAsFile())</span><br><span class="line">                    <span class="comment">// 用webkitGetAsEntry禁止上传目录</span></span><br><span class="line">                    <span class="keyword">if</span> (item.kind === <span class="string">"file"</span> &amp;&amp; item.webkitGetAsEntry().isFile) &#123;</span><br><span class="line">                        <span class="keyword">var</span> dropFile = item.getAsFile();</span><br><span class="line"><span class="comment">// 判断完这个对象之后压入数组中</span></span><br><span class="line">                        dropFiles.push(dropFile);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 上传到图床</span></span><br><span class="line">            dropFiles.forEach(<span class="function"><span class="params">file</span> =&gt;</span> &#123;</span><br><span class="line"><span class="comment">// formdata的作用是构建post的请求body部分</span></span><br><span class="line">                <span class="keyword">const</span> formdata = <span class="keyword">new</span> FormData()</span><br><span class="line">                formdata.append(<span class="string">'image'</span>, file)</span><br><span class="line"><span class="comment">// loading是加载动画的一段语句，在图片上传的过程中用于占位</span></span><br><span class="line">                smde.codemirror.doc.replaceSelection(loading)</span><br><span class="line">                <span class="keyword">if</span> (baseConfig.picBedUrl) &#123;</span><br><span class="line">                    uploadToPicBeds(formdata, baseConfig.picBedUrl, baseConfig.token)</span><br><span class="line">                        .then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">                            <span class="keyword">var</span> finalUrl = <span class="string">`&lt;img src="<span class="subst">$&#123;res&#125;</span>"&gt;`</span></span><br><span class="line">                            smde.codemirror.doc.undoSelection()</span><br><span class="line">                            smde.codemirror.doc.replaceSelection(finalUrl)</span><br><span class="line">                            rendererMarkDownToHtml(smde.value())</span><br><span class="line"><span class="comment">//LightTip是LuLuUI库的一个组件，我认为挺好看的，所以很多地方都用到了这个组件</span></span><br><span class="line">                            <span class="keyword">new</span> LightTip().success(<span class="string">'图床图片上传成功'</span>, <span class="number">2000</span>);</span><br><span class="line">                        &#125;)</span><br><span class="line">                        .catch(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">                            smde.codemirror.doc.undoSelection()</span><br><span class="line">                            <span class="keyword">new</span> LightTip().error(<span class="string">'图床图片上传失败，请检查图床配置'</span>, <span class="number">4000</span>);</span><br><span class="line">                            finalUrl = <span class="string">`![<span class="subst">$&#123;file.name&#125;</span>](<span class="subst">$&#123;file.path&#125;</span>)`</span></span><br><span class="line">                            smde.codemirror.doc.replaceSelection(finalUrl)</span><br><span class="line">                            rendererMarkDownToHtml(smde.value())</span><br><span class="line">                        &#125;)</span><br><span class="line"></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">var</span> finalUrl = <span class="string">`![<span class="subst">$&#123;file.name&#125;</span>](<span class="subst">$&#123;file.path&#125;</span>)`</span></span><br><span class="line">                    smde.codemirror.doc.undoSelection()</span><br><span class="line">                    smde.codemirror.doc.replaceSelection(finalUrl)</span><br><span class="line">                    rendererMarkDownToHtml(smde.value())</span><br><span class="line">                    <span class="keyword">new</span> LightTip().success(<span class="string">'本地图片添加成功'</span>, <span class="number">2000</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mainProcess.openFile(currentWindow, file.path)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> LightTip().error(<span class="string">'该文件类型暂时无法上传'</span>, <span class="number">4000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="直面问题"><a href="#直面问题" class="headerlink" title="直面问题"></a>直面问题</h2><p>不得不承认，有很多地方我都没有做完，甚至完成度只有$60%$,但我急于进入Vue的学习开发，就不得不将纯JavaScript的版本早点完结。</p><ul><li>左右界面的同步滚动问题，由于我一直找不到好的同步滚动解决方案，因此我采用的是两个显示部分距离顶部的长度相等，这样确实不太好很多时候都会出现奇怪的问题…</li><li>左侧UI布局不是特别的合理</li><li>很多按钮都是废弃的按钮，我已经没有什么精力去将他们一一修正了。</li><li>tasklist列表还是显示不正常</li></ul><p>如果你使用了Neeto并且有任何意见或是反馈，请及时告知我，告知的方法也很简单，点击左侧下部的小飞机按钮，填写建议还有您的联系方式即可，万分感谢</p><img src="https://pic.tanknee.cn/blogpicbed/2020/01/20200121a677c9b6e7214.png"><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><h3 id="MarkDown语法"><a href="#MarkDown语法" class="headerlink" title="MarkDown语法"></a>MarkDown语法</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Markdown Guide</span><br><span class="line">Emphasis</span><br><span class="line"><span class="strong">**bold**</span></span><br><span class="line"><span class="emphasis">*italics*</span></span><br><span class="line">~~strikethrough~~</span><br><span class="line">Headers</span><br><span class="line"><span class="section"># Big header</span></span><br><span class="line"><span class="section">## Medium header</span></span><br><span class="line"><span class="section">### Small header</span></span><br><span class="line"><span class="section">#### Tiny header</span></span><br><span class="line">Lists</span><br><span class="line"><span class="bullet">* </span>Generic list item</span><br><span class="line"><span class="bullet">* </span>Generic list item</span><br><span class="line"><span class="bullet">* </span>Generic list item</span><br><span class="line"></span><br><span class="line"><span class="bullet">1. </span>Numbered list item</span><br><span class="line"><span class="bullet">2. </span>Numbered list item</span><br><span class="line"><span class="bullet">3. </span>Numbered list item</span><br><span class="line"></span><br><span class="line">Links</span><br><span class="line">[<span class="string">Text to display</span>](<span class="link">http://www.example.com</span>)</span><br><span class="line"></span><br><span class="line">Quotes</span><br><span class="line"><span class="quote">&gt; This is a quote.</span></span><br><span class="line"><span class="quote">&gt; It can span multiple lines!</span></span><br><span class="line"></span><br><span class="line">Images   Need to upload an image? Imgur has a great interface.</span><br><span class="line">![](http://www.example.com/image.jpg)</span><br><span class="line"></span><br><span class="line">Tables</span><br><span class="line">| Column 1 | Column 2 | Column 3 |</span><br><span class="line">| -------- | -------- | -------- |</span><br><span class="line">| John     | Doe      | Male     |</span><br><span class="line">| Mary     | Smith    | Female   |</span><br><span class="line"></span><br><span class="line">Or without aligning the columns...</span><br><span class="line"></span><br><span class="line">| Column 1 | Column 2 | Column 3 |</span><br><span class="line">| -------- | -------- | -------- |</span><br><span class="line">| John | Doe | Male |</span><br><span class="line">| Mary | Smith | Female |</span><br><span class="line"></span><br><span class="line">Displaying code</span><br><span class="line"><span class="code">`var example = "hello!";`</span></span><br><span class="line"></span><br><span class="line">Or spanning multiple lines...</span><br><span class="line"></span><br><span class="line">code</span><br><span class="line">var example = "hello!";</span><br><span class="line">alert(example);</span><br><span class="line">code</span><br></pre></td></tr></table></figure><h3 id="LaTeX"><a href="#LaTeX" class="headerlink" title="LaTeX"></a>LaTeX</h3><p><strong>数学公式实现</strong>：支持LaTeX语法</p><p>$\alpha, \beta, \Beta, \gamma, \Gamma, \pi, \Pi, \phi, \varphi, \mu, \Phi$</p><p>$\cos(2 \theta) = \cos ^ 2 \theta - \sin ^ 2 \theta$</p><p>$\lim_{x \to \infty}^ (e^(-x)) = 0$</p><img src="https://pic.tanknee.cn/blogpicbed/2020/01/202001219ab3dd2c8994b.png"><blockquote><p><strong>写在最后</strong></br><br>说实话吧，好长一段时间里我都听不喜欢前端的，因为在我的刻板前端不就是切图吗，然后写点小动画，有什么前途，但是说来容易做时难啊，真正放开手去做的时候才能切身感受到前端也已经不仅仅是前端了，不过，还是要两头兼顾，前后端都要掌握。</p></blockquote><blockquote><p>最后一些屁话，应该没有人真的会看到这里吧。说真的，大学越活越糊涂我是真的有点难受，学习也整不起来，技术也学不明白，身体也没有很好//PS:本武汉（回来的）人已经14天未见异常了，所以我不是患者！！但是我好像有点感冒…</p></blockquote><h2 id="如果你对Neeto感兴趣"><a href="#如果你对Neeto感兴趣" class="headerlink" title="如果你对Neeto感兴趣"></a>如果你对Neeto感兴趣</h2><p>可以前往<a href="https://neeto.cn" target="_blank" rel="noopener">Neeto官网</a> 查看源码和更多信息，项目已经在GitHub和Gitea开源了，如果可以的话，能为我点个Star吗！！！！<strong>这对我真的很重要</strong>(cxx语气)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Code" scheme="https://www.tanknee.cn/categories/Code/"/>
    
    
      <category term="服务器" scheme="https://www.tanknee.cn/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="操作" scheme="https://www.tanknee.cn/tags/%E6%93%8D%E4%BD%9C/"/>
    
      <category term="时候" scheme="https://www.tanknee.cn/tags/%E6%97%B6%E5%80%99/"/>
    
      <category term="汇编" scheme="https://www.tanknee.cn/tags/%E6%B1%87%E7%BC%96/"/>
    
      <category term="文件" scheme="https://www.tanknee.cn/tags/%E6%96%87%E4%BB%B6/"/>
    
      <category term="类型" scheme="https://www.tanknee.cn/tags/%E7%B1%BB%E5%9E%8B/"/>
    
      <category term="按钮" scheme="https://www.tanknee.cn/tags/%E6%8C%89%E9%92%AE/"/>
    
      <category term="对象" scheme="https://www.tanknee.cn/tags/%E5%AF%B9%E8%B1%A1/"/>
    
      <category term="图床" scheme="https://www.tanknee.cn/tags/%E5%9B%BE%E5%BA%8A/"/>
    
      <category term="markdown" scheme="https://www.tanknee.cn/tags/markdown/"/>
    
      <category term="length" scheme="https://www.tanknee.cn/tags/length/"/>
    
      <category term="列表" scheme="https://www.tanknee.cn/tags/%E5%88%97%E8%A1%A8/"/>
    
      <category term="node" scheme="https://www.tanknee.cn/tags/node/"/>
    
      <category term="neeto" scheme="https://www.tanknee.cn/tags/neeto/"/>
    
      <category term="file" scheme="https://www.tanknee.cn/tags/file/"/>
    
      <category term="typora" scheme="https://www.tanknee.cn/tags/typora/"/>
    
      <category term="图片" scheme="https://www.tanknee.cn/tags/%E5%9B%BE%E7%89%87/"/>
    
  </entry>
  
  <entry>
    <title>Neeto - 为补全缺憾而生的Markdown编辑器</title>
    <link href="https://www.tanknee.cn/2020/01/09/neeto/"/>
    <id>https://www.tanknee.cn/2020/01/09/neeto/</id>
    <published>2020-01-09T08:21:00.000Z</published>
    <updated>2020-06-01T14:59:44.608Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>这是一篇不断更新的文章</p><hr><blockquote><p>考察了很多的markdown编辑器，有做得很棒的，比如typora，我个人很喜欢这个编辑器，但是有几个我无法忍受的问题：</p></blockquote><blockquote><ul><li>没有云文件系统</li><li>没有图床的支持</li></ul></blockquote><p>然后其他的比较完整的markdown编辑如MWeb和熊掌记，都只有mac版，而我的主力是win所以基本不可用。</p><p>正好最近学了electron和js，然后买了一本Electron跨平台开发，里面有几张讲到了文本编辑器的制作，我也就准备自己做一个满足个人需求的文本编辑器。</p><p>[button color=”info” icon=”” url=”<a href="https://github.com/TankNee/Neeto&quot;" target="_blank" rel="noopener">https://github.com/TankNee/Neeto&quot;</a> type=””]GitHub地址[/button]</p><p>[button color=”success” icon=”” url=”<a href="https://git.tanknee.cn/tanknee/ElectronTest_MarkDownEditer&quot;" target="_blank" rel="noopener">https://git.tanknee.cn/tanknee/ElectronTest_MarkDownEditer&quot;</a> type=””]Gitea地址[/button]</p><p>[button color=”dark” icon=”” url=”<a href="https://neeto.cn&quot;" target="_blank" rel="noopener">https://neeto.cn&quot;</a> type=””]GitPage[/button]</p><h3 id="ScreenShot："><a href="#ScreenShot：" class="headerlink" title="ScreenShot："></a>ScreenShot：</h3><img src="https://img.tanknee.cn/blogpicbed/2020/01/202001103a1ef34bc448f.png"/><h3 id="语法演示："><a href="#语法演示：" class="headerlink" title="语法演示："></a>语法演示：</h3><img src="https://img.tanknee.cn/blogpicbed/2020/01/202001101a30d18c5aba9.png"/><h3 id="LaTex语法支持"><a href="#LaTex语法支持" class="headerlink" title="LaTex语法支持"></a>LaTex语法支持</h3><img src="https://img.tanknee.cn/blogpicbed/2020/01/202001102b462e1b49196.png"/><h3 id="Running-Shot"><a href="#Running-Shot" class="headerlink" title="Running Shot"></a>Running Shot</h3><p><img src="https://img.tanknee.cn/blogpicbed/2020/01/202001166f58171ef1c23.gif" alt="Running Shot"></p><h2 id="Neeto-在1-X版本中发展设想"><a href="#Neeto-在1-X版本中发展设想" class="headerlink" title="Neeto 在1.X版本中发展设想"></a>Neeto 在1.X版本中发展设想</h2><h3 id="将来必定会实现的功能："><a href="#将来必定会实现的功能：" class="headerlink" title="将来必定会实现的功能："></a>将来必定会实现的功能：</h3><ul><li><input disabled="" type="checkbox"> 括号的自动补全</li><li><input checked="" disabled="" type="checkbox"> LaTex公式解析</li><li><input checked="" disabled="" type="checkbox"> 图片粘贴后上传到图床，并用返回的链接替换输入</li><li><input disabled="" type="checkbox"> 实现云笔记功能，但不保证实现云协作</li><li><input disabled="" type="checkbox"> 实现网页端的后台管理系统，应该将会使用Java构建后台</li></ul><h3 id="将来有可能实现的功能："><a href="#将来有可能实现的功能：" class="headerlink" title="将来有可能实现的功能："></a>将来有可能实现的功能：</h3><ul><li><input disabled="" type="checkbox"> 主题系统</li><li><input disabled="" type="checkbox"> 文件系统</li><li><input disabled="" type="checkbox"> 设置界面</li></ul><h3 id="将来应该不会实现的部分："><a href="#将来应该不会实现的部分：" class="headerlink" title="将来应该不会实现的部分："></a>将来应该不会实现的部分：</h3><ul><li><input disabled="" type="checkbox"> 云协作</li><li><input disabled="" type="checkbox"> 插件系统</li><li><input disabled="" type="checkbox"> 实时渲染–这个我暂时也没有找到合理的解决方式。</li></ul><h2 id="关于后台"><a href="#关于后台" class="headerlink" title="关于后台"></a>关于后台</h2><p>今天1.9，已经写了一部分后端，但是由于其他的项目，所以暂时还没有发不出来，不过已经在路上了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Code" scheme="https://www.tanknee.cn/categories/Code/"/>
    
    
      <category term="type" scheme="https://www.tanknee.cn/tags/type/"/>
    
      <category term="文件" scheme="https://www.tanknee.cn/tags/%E6%96%87%E4%BB%B6/"/>
    
      <category term="地址" scheme="https://www.tanknee.cn/tags/%E5%9C%B0%E5%9D%80/"/>
    
      <category term="Java" scheme="https://www.tanknee.cn/tags/Java/"/>
    
      <category term="button" scheme="https://www.tanknee.cn/tags/button/"/>
    
      <category term="图床" scheme="https://www.tanknee.cn/tags/%E5%9B%BE%E5%BA%8A/"/>
    
      <category term="云协" scheme="https://www.tanknee.cn/tags/%E4%BA%91%E5%8D%8F/"/>
    
      <category term="electron" scheme="https://www.tanknee.cn/tags/electron/"/>
    
      <category term="markdown" scheme="https://www.tanknee.cn/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>2020 新世界的船票</title>
    <link href="https://www.tanknee.cn/2019/12/31/2020_newWorld/"/>
    <id>https://www.tanknee.cn/2019/12/31/2020_newWorld/</id>
    <published>2019-12-31T12:14:38.000Z</published>
    <updated>2020-06-01T14:59:44.608Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>[Meting]<br>[Music server=”netease” id=”528272281” type=”song”/]<br>[/Meting]</p><img src="https://img.tanknee.cn/blogpicbed/2019/12/20191231304a09d78bd0b.jpg"/><blockquote><p>我是旧世界的残党，新世界没有能载我的船</p><p>——海贼王481集</p></blockquote><p>十年前的小学三年级，那时常有写日记的作业，学校发的日记本是泛黄的绿格子本，一页约莫只有百来个格子，最顶头是填日期的地方，我仍记得我歪歪扭扭地在年份的空里写下2010，却又感觉不甚熟悉。</p><h2 id="一晃眼，已经十年了"><a href="#一晃眼，已经十年了" class="headerlink" title="一晃眼，已经十年了"></a>一晃眼，已经十年了</h2><p>初二的时候吧，在寝室里，蛋蛋问我以后会去读什么专业，虽然我也不知道那时候怎么会突然提起这个话题，我脱口而出的就是软件工程。原因也很奇怪，那几天在一本杂志上看过一个人在澳洲读软件工程硕士的文章，只是单纯地觉得这个专业很酷，而且可以玩我平时很少能触及的电脑。没想到四年之后，阴差阳错还真的来到了这个专业，本是一心想学的计算机，结果报的全没上，也算是一种缘分吧。</p><p>不知道是长大了的原因还是其他的原因，这十年的记忆要比前十年的要清晰的多。我会永远地记得在楼道里上下奔走寻找我妈的教室的那段记忆，虽然这几年已经模糊了不少，但那种晕眩感和盲目无从的感觉，从未离开我那段记忆。</p><h2 id="重复轮播不停的十年"><a href="#重复轮播不停的十年" class="headerlink" title="重复轮播不停的十年"></a>重复轮播不停的十年</h2><p>两年小学，三年初中，三年高中，还有两年的大学，应该是这辈子第一次也是最后一次全在读书的十年了，你往回翻阅时，在每一年都能找到惊喜，失望，苦痛，欢愉，但是，这一年年的，又是何其的相似，无外乎上课，吃饭，寝室，所谓情绪，不过是这三点奔波间的插曲，我更像是无情的规则执行机器，按部就班地走着既定的线路。</p><p>每段学习的日子都会碰上几个难以忘怀的人，有的现在还有联系，有的热络了一段时间便沉寂下去，有的从冷落的通讯录中突然炸出，很快又冷却回去。</p><p>我真像个小孩，特别是在不承认这句话的时候，比如现在。</p><h2 id="怀疑的，自责的，但从不悔过的十年"><a href="#怀疑的，自责的，但从不悔过的十年" class="headerlink" title="怀疑的，自责的，但从不悔过的十年"></a>怀疑的，自责的，但从不悔过的十年</h2><img src="https://img.tanknee.cn/blogpicbed/2019/12/201912309f083b3bc1495.png!normal"/><p>相信自己是病态的和坚定自己是正常人一样，无可苛责。到了今天，写到这里的时候，才真正的感觉到，这些年留下的到底是什么：</p><blockquote><p>人们从历史中得到的唯一教训，就是得不到任何教训</p><p>——黑格尔</p></blockquote><p>本来只想写2019年发生的事情，刚写完开头，就发现已经偏得离谱，索性就直接往下写了。</p><h2 id="说说今年吧"><a href="#说说今年吧" class="headerlink" title="说说今年吧"></a>说说今年吧</h2><p>大学的第一个暑假</p><p>没有学完车</p><p>没有做任何有意义的事情。</p><p>去了一趟并不那么痛快的苏州</p><p>第一次这么急着离开家来到学校，在外面呆了差不多半年，甚至直到现在也没有特别想回去的感觉，除了午夜饿肚子的时候，还有早上对着韵酒硬如纸板的手抓饼难以下咽时，会难以遏制地想起乐清的糯米饭，年糕，炒粉。</p><img src="https://img.tanknee.cn/blogpicbed/2019/12/201912300632eaa53739d.png/imgzip"/><p>种了一年的树，很多时候都难以相信自己可以这么长时间不碰手机，不过大多时候不是在玩平板就是跟软件拼手速，甚至还有睡觉种树的诡异操作。不过我相信，<strong>今年的华科树王肯定还是我</strong>！！</p><p>买的东西越来越昂贵，很多时候都超出了自己的承受范围，不过好的产品，确实可以有效提升效率。今年最满意的应该是上个月刚买的AirPods Pro，无他，省事。第二位就是过年的时候的iPad2018，虽然很多次都想要换成Air3或者Pro2018，不过着实承受不起了。</p><p>最让我受益匪浅的一件事情，是七月末，开始折腾以前认为繁琐不堪的服务器，自那之后一发不可收拾，如果没有那段时间的闲着蛋疼，应该后来就不会去参加前端项目，应该也就不会这么忙…Anyway，我认为这是有益的。</p><p>年初立的Flag不知道被我丢哪里去了，所以现在也没有办法知道自己到底有没有做到。反正暑假立下的什么学车，看书，看电影统统没有完成。这件事情告诉我们，不要乱搞什么Flag…</p> <img src="https://img.tanknee.cn/blogpicbed/2019/12/20191231e2f72c17f9091.jpg"/><h2 id="最后说说今天吧"><a href="#最后说说今天吧" class="headerlink" title="最后说说今天吧"></a>最后说说今天吧</h2><p>anyway，我想做的想说的基本都说了做了，今年也算是不留遗憾了。</p><img src="https://img.tanknee.cn/blogpicbed/2019/12/201912319191d0a6bf091.jpg"/><p>害</p><p>大伙儿都过得开心点，明年一定是个好年</p><p>一定是</p><img src="https://img.tanknee.cn/blogpicbed/2019/12/20191230207f065ccc612.png!normal"/>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Caprice" scheme="https://www.tanknee.cn/categories/Caprice/"/>
    
    
      <category term="服务器" scheme="https://www.tanknee.cn/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="日记" scheme="https://www.tanknee.cn/tags/%E6%97%A5%E8%AE%B0/"/>
    
      <category term="meting" scheme="https://www.tanknee.cn/tags/meting/"/>
    
      <category term="netease" scheme="https://www.tanknee.cn/tags/netease/"/>
    
      <category term="type" scheme="https://www.tanknee.cn/tags/type/"/>
    
      <category term="server" scheme="https://www.tanknee.cn/tags/server/"/>
    
      <category term="操作" scheme="https://www.tanknee.cn/tags/%E6%93%8D%E4%BD%9C/"/>
    
      <category term="时候" scheme="https://www.tanknee.cn/tags/%E6%97%B6%E5%80%99/"/>
    
      <category term="flag" scheme="https://www.tanknee.cn/tags/flag/"/>
    
      <category term="anyway" scheme="https://www.tanknee.cn/tags/anyway/"/>
    
      <category term="记忆" scheme="https://www.tanknee.cn/tags/%E8%AE%B0%E5%BF%86/"/>
    
  </entry>
  
  <entry>
    <title>冬至愉悦</title>
    <link href="https://www.tanknee.cn/2019/12/22/%E5%86%AC%E8%87%B3%E6%84%89%E6%82%A6/"/>
    <id>https://www.tanknee.cn/2019/12/22/%E5%86%AC%E8%87%B3%E6%84%89%E6%82%A6/</id>
    <published>2019-12-22T04:22:00.000Z</published>
    <updated>2020-06-01T14:59:44.574Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="美好冬至的清晨，是在九点半醒来的"><a href="#美好冬至的清晨，是在九点半醒来的" class="headerlink" title="美好冬至的清晨，是在九点半醒来的"></a>美好冬至的清晨，是在九点半醒来的</h2><img src="https://img.tanknee.cn/blogpicbed/2019/12/2019122225bc9c42c94a1.jpg/imgzip"/><p>我总是觉得冬至不是已经过了吗，后来想想那个好像是立冬？但是为什么过了立冬才是冬至？？这两个难道不是同一个意思吗？？？<strong>今日疑惑</strong></p><h2 id="惭愧，我拿着汤圆钱去吃了饺子"><a href="#惭愧，我拿着汤圆钱去吃了饺子" class="headerlink" title="惭愧，我拿着汤圆钱去吃了饺子"></a>惭愧，我拿着汤圆钱去吃了饺子</h2><p>我是南方人的叛徒，我认罪。</p><p>这是2019年的倒数第九天，也是我来学校的<strong>第一百二十六天</strong>，二十一世纪10年代的最后一年还有不到百分之三的余额，大家也都别冲值了，<strong>不会变强的</strong>,只会变<strong>秃</strong>。</p><img src="https://img.tanknee.cn/blogpicbed/2019/12/2019122250775b904e8ec.jpg/imgzip"/><h2 id="前几天在网上遇见一个自称患了抑郁的网友"><a href="#前几天在网上遇见一个自称患了抑郁的网友" class="headerlink" title="前几天在网上遇见一个自称患了抑郁的网友"></a>前几天在网上遇见一个自称患了抑郁的网友</h2><p>我希望他是假的，但我也希望他能好起来，不管是哪种情况。</p><img src="https://img.tanknee.cn/blogpicbed/2019/12/201912226c646cba1c6f0.png"/><p>害，说到出去看看，我都多久没有出学校大门了。</p><h2 id="最近受某位脸大的朋友影响，开始点评吃过的饭菜？"><a href="#最近受某位脸大的朋友影响，开始点评吃过的饭菜？" class="headerlink" title="最近受某位脸大的朋友影响，开始点评吃过的饭菜？"></a>最近受某位脸大的朋友影响，开始点评吃过的饭菜？</h2><img src="https://img.tanknee.cn/blogpicbed/2019/12/20191222be7fc949d8158.jpg/imgzip"/><p>冬至，年近，归程不远</p><p>大家冬至快乐</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Caprice" scheme="https://www.tanknee.cn/categories/Caprice/"/>
    
    
      <category term="冬至" scheme="https://www.tanknee.cn/tags/%E5%86%AC%E8%87%B3/"/>
    
      <category term="立冬" scheme="https://www.tanknee.cn/tags/%E7%AB%8B%E5%86%AC/"/>
    
      <category term="归程" scheme="https://www.tanknee.cn/tags/%E5%BD%92%E7%A8%8B/"/>
    
      <category term="惭愧" scheme="https://www.tanknee.cn/tags/%E6%83%AD%E6%84%A7/"/>
    
      <category term="叛徒" scheme="https://www.tanknee.cn/tags/%E5%8F%9B%E5%BE%92/"/>
    
  </entry>
  
</feed>
